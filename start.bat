console.log('  ============== ')
console.log('  –°–∫—Ä–∏–ø—Ç "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–æ—Ç" –∑–∞–ø—É—â–µ–Ω.')
console.log('  ============== ')

console.log('-------------------------------')
console.log('')

// –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –í –§–ê–ô–õ–ï /database/settings.! 

const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
var wall_to_send = '';

const cars = [
	{
		name: '–°–∞–º–æ–∫–∞—Ç',
		cost: 500,
		id: 1
	},
	{
		name: '–í–µ–ª–æ—Å–∏–ø–µ–¥',
		cost: 2500,
		id: 2
	},
	{
		name: '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä',
		cost: 5000,
		id: 3
	},
	{
		name: '–°–∏–≥–≤–µ–π',
		cost: 7500,
		id: 4
	},
	{
		name: '–ú–æ–ø–µ–¥',
		cost: 25000,
		id: 5
	},
	{
		name: '–ú–æ—Ç–æ—Ü–∏–∫–ª',
		cost: 50000,
		id: 6
	},
	{
		name: '–í–ê–ó 2109',
		cost: 75000,
		id: 7
	},
	{
		name: '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª',
		cost: 80000,
		id: 8
	},
	{
		name: '–ë–∞–≥–≥–∏',
		cost: 135000,
		id: 9
	},
	{
		name: '–í–µ–∑–¥–µ—Ö–æ–¥',
		cost: 200000,
		id: 10
	},
	{
		name: '–õ–∞–¥–∞ Xray',
		cost: 350000,
		id: 11
	},
	{
		name: 'Audi Q7',
		cost: 750000,
		id: 12
	},
	{
		name: 'BMW X6',
		cost: 1000000,
		id: 13
	},
	{
		name: 'Toyota FT-HS',
		cost: 1750000,
		id: 14
	},
	{
		name: 'BMW Z4 M',
		cost: 2500000,
		id: 15
	},
	{
		name: 'Subaru WRX STI',
		cost: 2750000,
		id: 16
	},
	{
		name: 'Lamborghini Veneno',
		cost: 3000000,
		id: 17
	},
	{
		name: 'Tesla Roadster',
		cost: 4500000,
		id: 18
	},
	{
		name: 'Yamaha YZF R6',
		cost: 5000000,
		id: 19
	},
	{
		name: 'Bugatti Chiron',
		cost: 6500000,
		id: 20
	},
	{
		name: 'Thrust SSC',
		cost: 35000000,
		id: 21
	},
	{
		name: 'Ferrari LaFerrari',
		cost: 39000000,
		id: 22
	},
	{
		name: 'Koenigsegg Regear',
		cost: 50000000,
		id: 23
	},
	{
		name: 'Tesla Semi',
		cost: 75000000,
		id: 24
	},
	{
		name: 'Venom GT',
		cost: 125000000,
		id: 25
	},
	{
		name: 'Rolls-Royce',
		cost: 200000000,
		id: 26
	}
];

const yachts = [
	{
		name: '–í–∞–Ω–Ω–∞',
		cost: 10000,
		id: 1
	},
	{
		name: 'Nauticat 331',
		cost: 10000000,
		id: 2
	},
	{
		name: 'Nordhavn 56 MS',
		cost: 15000000,
		id: 3
	},
	{
		name: 'Princess 60',
		cost: 25000000,
		id: 4
	},
	{
		name: 'Azimut 70',
		cost: 35000000,
		id: 5
	},
	{
		name: 'Dominator 40M',
		cost: 50000000,
		id: 6
	},
	{
		name: 'Moonen 124',
		cost: 60000000,
		id: 7
	},
	{
		name: 'Wider 150',
		cost: 65000000,
		id: 8
	},
	{
		name: 'Palmer Johnson 42M SuperSport',
		cost: 80000000,
		id: 9
	},
	{
		name: 'Wider 165',
		cost: 85000000,
		id: 10
	},
	{
		name: 'Eclipse',
		cost: 150000000,
		id: 11
	},
	{
		name: 'Dubai',
		cost: 300000000,
		id: 12
	},
	{
		name: 'Streets of Monaco',
		cost: 750000000,
		id: 13
	}
];

const stranas = [ 

	{ 
	name: '–ù–µ —É–∫–∞–∑–∞–Ω–∞', 
	cost: 0, 
	id: 1 
	}, 
	{ 
	name: 'üá∫üá∏–°–®–ê', 
	cost: 0, 
	id: 2 
	}, 
	
	{ 
	name: 'üá∑üá∫–†–æ—Å—Å–∏—è', 
	cost: 0, 
	id: 3 
	}, 
	
	{ 
	name: 'üá∞üá∑–Ø–ø–æ–Ω–∏—è', 
	cost: 0, 
	id: 4 
	}, 
	
	{ 
	name: 'üá∫üá¶–£–∫—Ä–∞–∏–Ω–∞', 
	cost: 0, 
	id: 5 
	}, 
	{ 
	name: 'üá∞üáø–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', 
	cost: 0, 
	id: 6 
	}, 
	{ 
	name: 'üáßüáæ–ë–µ–ª–æ—Ä—É—Å—Å–∏—è', 
	cost: 0, 
	id: 7 
	}, 
	{ 
	name: 'üá™üá∏ –ò—Å–ø–∞–Ω–∏—è', 
	cost: 0, 
	id: 7 
	}, 
	{ 
	name: 'üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è', 
	cost: 0, 
	id: 7 
	} 
	];

const airplanes = [
	{
		name: '–ü–∞—Ä–∞–ø–ª–∞–Ω',
		cost: 100000,
		id: 1
	},
	{
		name: '–ê–ù-2',
		cost: 350000,
		id: 2
	},
	{
		name: 'Cessna-172E',
		cost: 700000,
		id: 3
	},
	{
		name: 'Supermarine Spitfire',
		cost: 1000000,
		id: 4
	},
	{
		name: 'BRM NG-5',
		cost: 1400000,
		id: 5
	},
	{
		name: 'Cessna T210',
		cost: 2600000,
		id: 6
	},
	{
		name: 'Beechcraft 1900D',
		cost: 5500000,
		id: 7
	},
	{
		name: 'Cessna 550',
		cost: 8000000,
		id: 8
	},
	{
		name: 'Hawker 4000',
		cost: 22400000,
		id: 9
	},
	{
		name: 'Learjet 31',
		cost: 45000000,
		id: 10
	},
	{
		name: 'Airbus A318',
		cost: 85000000,
		id: 11
	},
	{
		name: 'F-35A',
		cost: 160000000,
		id: 12
	},
	{
		name: 'Boeing 747-430 Custom',
		cost: 225000000,
		id: 13
	},
	{
		name: 'C-17A Globemaster III',
		cost: 350000000,
		id: 14
	},
	{
		name: 'F-22 Raptor',
		cost: 400000000,
		id: 15
	},
	{
		name: 'Airbus 380 Custom',
		cost: 600000000,
		id: 16
	},
	{
		name: 'B-2 Spirit Stealth Bomber',
		cost: 1359000000,
		id: 17
	}
];

const helicopters = [
	{
		name: '–®–∞—Ä–∏–∫ —Å –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–º',
		cost: 2,
		id: 1
	},
	{
		name: 'RotorWay Exec 162F',
		cost: 300000,
		id: 2
	},
	{
		name: 'Robinson R44',
		cost: 450000,
		id: 3
	},
	{
		name: 'Hiller UH-12C',
		cost: 1300000,
		id: 4
	},
	{
		name: 'AW119 Koala',
		cost: 2500000,
		id: 5
	},
	{
		name: 'MBB BK 117',
		cost: 4000000,
		id: 6
	},
	{
		name: 'Eurocopter EC130',
		cost: 7500000,
		id: 7
	},
	{
		name: 'Leonardo AW109 Power',
		cost: 10000000,
		id: 8
	},
	{
		name: 'Sikorsky S-76',
		cost: 15000000,
		id: 9
	},
	{
		name: 'Bell 429WLG',
		cost: 19000000,
		id: 10
	},
	{
		name: 'NHI NH90',
		cost: 35000000,
		id: 11
	},
	{
		name: 'Kazan Mi-35M',
		cost: 60000000,
		id: 12
	},
	{
		name: 'Bell V-22 Osprey',
		cost: 135000000,
		id: 13
	}
];

const homes = [
	{
		name: '–ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞',
		cost: 250,
		id: 1
	},
	{
		name: '–ü–æ–¥–≤–∞–ª',
		cost: 3000,
		id: 2
	},
	{
		name: '–ü–∞–ª–∞—Ç–∫–∞',
		cost: 3500,
		id: 3
	},
	{
		name: '–î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ',
		cost: 5000,
		id: 4
	},
	{
		name: '–ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º',
		cost: 10000,
		id: 5
	},
	{
		name: '–î–æ–º –≤ –ª–µ—Å—É',
		cost: 25000,
		id: 6
	},
	{
		name: '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º',
		cost: 37500,
		id: 7
	},
	{
		name: '–î–∞—á–∞',
		cost: 125000,
		id: 8
	},
	{
		name: '–ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º',
		cost: 80000,
		id: 9
	},
	{
		name: '–ö–æ—Ç—Ç–µ–¥–∂',
		cost: 450000,
		id: 10
	},
	{
		name: '–û—Å–æ–±–Ω—è–∫',
		cost: 1250000,
		id: 11
	},
	{
		name: '–î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ',
		cost: 5000000,
		id: 12
	},
	{
		name: '–õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–±',
		cost: 7000000,
		id: 13
	},
	{
		name: '–û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º',
		cost: 12500000,
		id: 14
	},
	{
		name: '–ë–µ–ª—ã–π –¥–æ–º',
		cost: 20000000,
		id: 15
	}
];

const apartments = [
	{
		name: '–ß–µ—Ä–¥–∞–∫',
		cost: 15000,
		id: 1
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏',
		cost: 55000,
		id: 2
	},
	{
		name: '–û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 175000,
		id: 3
	},
	{
		name: '–î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 260000,
		id: 4
	},
	{
		name: '–ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 500000,
		id: 5
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã',
		cost: 1600000,
		id: 6
	},
	{
		name: '–î–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 4000000,
		id: 7
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º',
		cost: 6000000,
		id: 8
	}
];

const phones = [
	{
		name: 'Nokia 108',
		cost: 250,
		id: 1
	},
	{
		name: 'Nokia 3310 (2017)',
		cost: 500,
		id: 2
	},
	{
		name: 'ASUS ZenFone 4',
		cost: 2000,
		id: 3
	},
	{
		name: 'BQ Aquaris X',
		cost: 10000,
		id: 4
	},
	{
		name: 'Sony Xperia XA',
		cost: 15000,
		id: 5
	},
	{
		name: 'Samsung Galaxy S8',
		cost: 30000,
		id: 6
	},
	{
		name: 'Xiaomi Mi Mix',
		cost: 50000,
		id: 7
	},
	{
		name: 'Torex FS1',
		cost: 75000,
		id: 8
	},
	{
		name: 'iPhone X',
		cost: 100000,
		id: 9
	},
	{
		name: '–ú–µ–≥–∞—Ñ–æ–Ω –°1',
		cost: 250000,
		id: 10
	}
];

const farms = [
	{
		name: '6U Nvidia',
		cost: 20500000,
		id: 1
	},
	{
		name: 'AntminerS9',
		cost: 100000000,
		id: 2
	},
	{
		name: 'FM2018-BT200',
		cost: 900000000,
		id: 3
	},
	{
		name: 'Genesis Mining',
		cost: 9000000000,
		id: 4
	},
	{
		name: 'GigaWatt',
		cost: 800000000000,
		id: 5
	}
];

const businesses = [
	{
		name: '–†–µ–∫–ª–∞–º–Ω–æ–µ –∞–≥–µ–Ω—Å—Ç–≤–æ',
		cost: 50000,
		earn: 400,
		id: 1,
		icon: 'ü•ñ'
	},
	{
		name: '–°–µ—Ä–≤–µ—Ä Mincraft',
		cost: 10000,
		earn: 700,
		id: 2,
		icon: 'üè™'
	},
	{
		name: '–°–µ—Ä–≤–µ—Ä Minecraft PE',
		cost: 300000,
		earn: 2500,
		id: 3,
		icon: 'üç∑'
	},
	{
		name: '–ú–∞–≥–∞–∑–∏–Ω(–ú–∞–≥–Ω–∏—Ç)',
		cost: 500000,
		earn: 3800,
		id: 4,
		icon: 'üè´'
	},
	{
		name: '–ú–∞–≥–∞–∑–∏–Ω(–Ø—Ä–º–∞—Ä–∫–∞)',
		cost: 1500000,
		earn: 8000,
		id: 5,
		icon: 'üè≠'
	},
	{
		name: '–®–∞—Ö—Ç–∞',
		cost: 25000000,
		earn: 70000,
		id: 6,
		icon: '‚õè'
	},
	{
		name: '–û—Ñ–∏—Å',
		cost: 80000000,
		earn: 220000,
		id: 7,
		icon: 'üè¢'
	},
	{
		name: 'GAME',
		cost: 150000000,
		earn: 300000,
		id: 8,
		icon: 'üïπ'
	},
	{
		name: '–ù–µ—Ñ—Ç–µ–≤—ã—à–∫–∞',
		cost: 500000000,
		earn: 700000,
		id: 9,
		icon: 'üèú'
	},
	{
		name: '–ê—Ç–æ–º–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è',
		cost: 800000000,
		earn: 1000000,
		id: 10,
		icon: 'üí°'
	},
	{
		name: '–ê–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏—è',
		cost: 10000000000,
		earn: 2500000,
		id: 11,
		icon: 'üçî'
	},
	{
		name: '–ú–µ–∂–ø–ª–∞–Ω–µ—Ç–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å',
		cost: 250000000000,
		earn: 35000000,
		id: 12,
		icon: 'üó∫'
	},
	{
		name: '–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å',
		cost: 420000000000000,
		earn: 500000000,
		id: 13,
		icon: 'üçî'
	}
];

	const odejda = [
		{
			name: '–®–º–æ—Ç–∫–∏ —Å Avito',
			cost: 3,
			id: 1
		},
		{
			name: '–®–º–æ—Ç–∫–∏ —Å AliExpress',
			cost: 1000,
			id: 2
		},
		{
			name: 'Demix',
			cost: 10000,
			id: 3
		},
		{
			name: 'Puma',
			cost: 300000,
			id: 4
		},
		{
			name: 'Reebok',
			cost: 300000,
			id: 5
		},
		{
			name: 'Nike',
			cost: 500000,
			id: 6
		},
		{
			name: 'Adidas',
			cost: 1000000,
			id: 7
		},
		{
			name: 'Armani',
			cost: 100000000,
			id: 8
		},
		{
			name: '–ú–∞—Å–∫–∞ –õ–µ—Å–∏',
			cost: 250000000,
			id: 9
		},
		{
			name: 'Versace',
			cost: 500000000,
			id: 10
		},
		{
			name: 'Burberry',
			cost: 1000000000,
			id: 11
		},
		{
			name: 'Ralph Lauren',
			cost: 10000000000,
			id: 12
		},
		{
			name: 'Coco Chanel',
			cost: 15000000000,
			id: 13
		},
		{
			name: 'Prada',
			cost: 30000000000,
			id: 14
		},
		{
			name: 'Hermes',
			cost: 100000000000,
			id: 15
		},
		{
			name: 'Gucci',
			cost: 5000000000000,
			id: 16
		},
		{
			name: '–ú–∞—Å–∫–∞ –õ–¨–≤–∞',
			cost: 100000000000000,
			id: 17
		}
	];

const pets = [
	{
		name: '–£–ª–∏—Ç–∫–∞',
		cost: 1000,
		id: 1
	},
	{
		name: '–ó–∞—è—Ü',
		cost: 500000,
		id: 2
	},
	{
		name: '–õ–∏—Å–∞',
		cost: 1250000000,
		id: 3
	},
	{
		name: '–°–æ–±–∞–∫–∞',
		cost: 5000000000,
		id: 4
	},
	{
		name: '–ü–æ–Ω–∏',
		cost: 30000000000,
		id: 5
	},
		{
		name: '–ü–∞–Ω—Ç–µ—Ä–∞',
		cost: 5000000000,
		id: 6
	},
	{
		name: '–î—Ä–∞–∫–æ–Ω',
		cost: 250000000000,
		id: 7
	}
];

const works = [
	{
		name: '–î–≤–æ—Ä–Ω–∏–∫',
		requiredLevel: 1,
		min: 2000,
		max: 2500,
		id: 1
	},
	{
		name: '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
		requiredLevel: 3,
		min: 3750,
		max: 4000,
		id: 2
	},
	{
		name: '–≠–ª–µ–∫—Ç—Ä–∏–∫',
		requiredLevel: 5,
		min: 4000,
		max: 4500,
		id: 3
	},
	{
		name: '–°–ª–µ—Å–∞—Ä—å',
		requiredLevel: 8,
		min: 5000,
		max: 5500,
		id: 4
	},
	{
		name: '–Æ—Ä–∏—Å—Ç',
		requiredLevel: 10,
		min: 7500,
		max: 8000,
		id: 5
	},
	{
		name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
		requiredLevel: 14,
		min: 9000,
		max: 9489,
		id: 6
	},
	{
		name: '–ë–∞—Ä–º–µ–Ω',
		requiredLevel: 22,
		min: 10000,
		max: 12500,
		id: 7
	},
	{
		name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
		requiredLevel: 25,
		min: 12500,
		max: 13500,
		id: 8
	},
	{
		name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç',
		requiredLevel: 49,
		min: 16000,
		max: 17500,
		id: 9
	}
];

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
	time: () => {
		return parseInt(new Date().getTime()/1000)
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±'
}

let btc = 6000;

let users = require('./database/users.json');
let config = require('./database/settings.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('saved');
}, 30000);

setInterval(async () => {
	users.filter(x=> x.misc.farm !== 0).map(x=> {
		if(x.misc.farm === 1)
		{
			x.farm_btc += 2;
		}

		if(x.misc.farm === 2)
		{
			x.farm_btc += 10;
		}

		if(x.misc.farm === 3)
		{
			x.farm_btc += 100;
		}
		if(x.misc.farm === 4)
		{
			x.farm_btc += 3000;
		}
		if(x.misc.farm === 5)
		{
			x.farm_btc += 25000;
		}
	});
}, 3600000);

setInterval(async () => {
	users.map(user => {
		if(user.business)
		{
			const biz = businesses.find(x=> x.id === user.business);
			if(!biz) return;

			user.biz += biz.earn;
		}
	});
}, 3600000);

function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./database/users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: config.grouptoken, pollingGroupId: config.groupid });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[club169479151\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club169479151\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

		users.push({
			id: message.senderId,
			uid: users.length,
			balance: 5000,
			bank: 0,
			btc: 0,
			farm_btc: 0,
			bkbays: 0,
			warn: 0,
			kplati: 0,
			odejda: 0,
			strana: 0,
			pasport: false,
			pasprabota: `–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`,
			givet: `–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`,
			nick: `–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`,
			dr: `–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`,
			msg: 0,
			biz: 0,
			rating: 0,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			mention: true,
			ban: false,
			timers: {
				hasWorked: false,
				bonus: false
			},
			tag: user_info.first_name,
			work: 0,
			business: [],
			notifications: true,
			exp: 1,
			level: 1,
			referal: null,
			roulette: -1,
			roulette_bet: 0,
			transport: {
				car: 0,
				yacht: 0,
				airplane: 0,
				helicopter: 0
			},
			realty: {
				home: 0,
				apartment: 0
			},
			settings: {
				adm: 0,
			},
			pet: {
				lvl: 0,
				poterl: false
				},
			misc: {
				phone: 0,
				farm: 0,
				farm_count: 0
			},
			marriage: {
				partner: 0,
				requests: []
			}
		});
		console.log(` +1 –∏–≥—Ä–æ–∫ [–ò–≥—Ä–æ–∫–æ–≤: ${users.length}]`);
		console.log(``);
		saveUsers();
	}

	message.user = users.find(x=> x.id === message.senderId);

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	if(message.user.ban) return bot(`–≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚õî`);

	const command = commands.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.settings.firstmsg)
	{

		message.send(` –ü—Ä–∏–≤–µ—Ç @id${message.user.id}(${message.user.tag})! –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è, –µ—Å–ª–∏ —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π(–∞—è) –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É ¬´–û–±—É—á–µ–Ω–∏–µ¬ª, –∞ –µ—Å–ª–∏ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ –∏–≥—Ä–∞—Ç—å/—Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, —Ç–∞–∫ - —Å–∫–∞–∑–∞—Ç—å - –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É ¬´–ü–æ–º–æ—â—å¬ª. üìö \n‚ùì | –¢–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–æ–º–µ—Ä: ‚Ññ${message.user.uid}`);

		message.user.settings.firstmsg = false;


		saveUsers();
		return;

	}

	if(!command)

	{
		message.user.msg += 1;
		message.user.list_ban += 1;
		message.user.pechenka += 1;

if(message.user.pets.exp >= 24)
{
message.user.pets.exp = 1;
message.user.pets.level += 1;
	message.user.msg += 1;
}

	}

	message.args =  message.text.match(command[0]);
	await command[1](message, bot);

saveUsers(); 
message.user.msg += 1 
console.log(` –í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}.`) 
console.log(``)
});

 const cmd = {
                    hear: (p, f) => {
                        commands.push([p, f]);
                    }
                }

				cmd.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|–º–µ–Ω—é|help|commands|@wild_bot1 üìö –ü–æ–º–æ—â—å|cmds|menu|–Ω–∞—á–∞—Ç—å|start)$/i, async (message, bot) => {
					await bot(`, –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
					‚ùì –ü–æ–º–æ—â—å [–∫–æ–º–∞–Ω–¥–∞] - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
					
					üéâ–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ:
					üì∫ –ì–∏—Ñ [—Ñ—Ä–∞–∑–∞]
					‚Ü™ –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ [—Ñ—Ä–∞–∑–∞]
					üîÆ –®–∞—Ä [—Ñ—Ä–∞–∑–∞]
					üìä –ò–Ω—Ñ–∞ [—Ñ—Ä–∞–∑–∞]
					‚öñ –í—ã–±–µ—Ä–∏ [—Ñ—Ä–∞–∑–∞] –∏–ª–∏ [—Ñ—Ä–∞–∑–∞2]
					üöÄ –ò–≥—Ä—ã:
					‚†Ä‚†Äüî´ –†—É–ª–µ—Ç–∫–∞ - —Ä—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞
					‚†Ä‚†Äüé≤ –ö—É–±–∏–∫ [1-6]
					‚†Ä‚†Äüé∞ –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]
					‚†Ä‚†Äüìà –¢—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—É–º–º–∞]
					‚†Ä‚†Äü•õ –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞]
					üëî –†–∞–±–æ—Ç–∞ - —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç
					‚†Äüî® –†–∞–±–æ—Ç–∞—Ç—å
					‚†Ä‚ùå –£–≤–æ–ª–∏—Ç—å—Å—è
					üíº –ë–∏–∑–Ω–µ—Å:
					‚†Ä‚†Äüìà –ë–∏–∑–Ω–µ—Å - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
					‚†Ä‚†Äüë∑ –ë–∏–∑–Ω–µ—Å –Ω–∞–Ω—è—Ç—å [1-2] [–∫–æ–ª-–≤–æ]
					‚†Ä‚†Äüíµ –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å [1-2] [–∫–æ–ª-–≤–æ] - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á—ë—Ç–∞
					‚†Ä‚†Ä‚úÖ –ë–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å [–Ω–æ–º–µ—Ä]
					
					üî• –ü–æ–ª–µ–∑–Ω–æ–µ:
					üì† –†–µ—à–∏ [–ø—Ä–∏–º–µ—Ä]
					üìä –ö—É—Ä—Å
					
					üí° –†–∞–∑–Ω–æ–µ:
					üì¶ –ö–µ–π—Å—ã
					üêå –ü–∏—Ç–æ–º—Ü—ã
					üìî –ü–∞—Å–ø–æ—Ä—Ç
					üá¶üá≤ –°—Ç—Ä–∞–Ω—ã
					üìí –ü—Ä–æ—Ñ–∏–ª—å
					üí≤ –ë–∞–ª–∞–Ω—Å
					üí∞ –ë–∞–Ω–∫ [—Å—É–º–º–∞/—Å–Ω—è—Ç—å —Å—É–º–º–∞]
					üëë –†–µ–π—Ç–∏–Ω–≥ - –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥
					‚úí –ù–∏–∫ [–Ω–∏–∫/–≤–∫–ª/–≤—ã–∫–ª]
					üõç –ú–∞–≥–∞–∑–∏–Ω
					üí∏ –ü—Ä–æ–¥–∞—Ç—å [–ø—Ä–µ–¥–º–µ—Ç]
					üîã –§–µ—Ä–º–∞ - –±–∏—Ç–∫–æ–∏–Ω —Ñ–µ—Ä–º–∞
					‚úâ –°–º—Å [id] [—Å–æ–æ–±—â–µ–Ω–∏–µ].
					„ÄÄ ‚úâ –ë—Å–º—Å [id –±–µ—Å–µ–¥—ã] [—Å–æ–æ–±—â–µ–Ω–∏–µ].
					ü§ù –ü–µ—Ä–µ–¥–∞—Ç—å [id] [—Å—É–º–º–∞]
					üèÜ –¢–æ–ø
					üíé –ë–æ–Ω—É—Å - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
					üíû –ë—Ä–∞–∫ [id] - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
					‚†Ä ‚†Ä–ë—Ä–∞–∫–∏ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
					üíî –†–∞–∑–≤–æ–¥
					‚åö –î–∞—Ç–∞ [id] - –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∫
					
					üÜò –†–µ–ø–æ—Ä—Ç [—Ñ—Ä–∞–∑–∞] - –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è`, {
					keyboard:JSON.stringify(
					{
					"inline": true,
					"buttons": [
					[{
					"action": {
					"type": "text",
					"payload": "{}",
					"label": "üîë –ë–æ–Ω—É—Å"
					},
					"color": "primary"
					},
					{
					"action": {
					"type": "text",
					"payload": "{}",
					"label": "üõç –î–æ–Ω–∞—Ç"
					},
					"color": "negative"
					}]
					]
					})
					})
				});
				
				cmd.hear(/^(?:–¥–æ–Ω–∞—Ç|üõç –î–æ–Ω–∞—Ç)$/i, async (message, bot) => {
					return bot(`—Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç?
				
					–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
					1) –í—ã–¥–∞—Ç—å [–∞–π–¥–∏] [—Å—É–º–º–∞] - –≤—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏.
					2) Removerub [–∞–π–¥–∏] - –∑–∞–±—Ä–∞—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ —É –∏–≥—Ä–æ–∫–∞.
					3) –í—ã–¥–∞—Ç—åopit - –≤—ã–¥–∞—Ç—å –æ–ø—ã—Ç.
					4) Removeopit - –∑–∞–±—Ä–∞—Ç—å –≤–µ—Å—å –æ–ø—ã—Ç.
					5) –í—ã–¥–∞—Ç—årating - –≤—ã–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥.
					6) Removerating - –∑–∞–±—Ä–∞—Ç—å –≤–µ—Å—å —Ä–µ–π—Ç–∏–Ω–≥.
					7) –í—ã–¥–∞—Ç—å—ç–Ω–µ—Ä–≥–∏—é - –≤—ã–¥–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é.
					8) –ó–∞–±—Ä–∞—Ç—å—ç–Ω—ç—Ä–≥–∏—é - –∑–∞–±—Ä–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é.
					9) ban - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞.
					10) unban - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞.
					11) warn - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
					12) unwarn - —Å–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
					
					‚Ä¢ –ó–∞ –¥–æ–Ω–∞—Ç–æ–º –ø–∏—Å–∞—Ç—å —Å—é–¥–∞: https://vk.com/id316269723
					`);
				});
				
				cmd.hear(/^(?:–Ω–∞—Å—Ç—Ä–æ–π–∫–∏|–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞)$/i, async (message, bot) => {
					if(message.user.settings.adm < 3) return;
					return bot(`‚öô –ü—Ä–∏–≤–µ—Ç, –µ—Å–ª–∏ —Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ ¬´–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π¬ª. –≠—Ç–æ —Å—Ç–∞—Ç—å—Å—è –¥–ª—è —Ç–µ–±—è.
				
					üîª –ö–∞–∫ –≤—ã–¥–∞–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—é –∏ —Ç.–ø.?
					üõë –î–ª—è –≤—ã–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É ¬´Adm [–ò–î] [1-3]¬ª. –ß—Ç–æ–±—ã —Å–Ω—è—Ç—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –≤–µ–¥–∏—Ç–µ ¬´–°–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞ [–ò–î].
					‚Ä¢ –£—Ä–æ–≤–Ω–∏ –∞–¥–º–∏–Ω–∞:
					1lvl - –°—É–ø–µ—Ä –ò–≥—Ä–æ–∫.
					2lvl - –ê–¥–º–∏–Ω.
					3lvl - –°–æ–∑–¥–∞—Ç–µ–ª—å.
					
					üîª –ï—Å–ª–∏ –≤—Å–µ —Ç–∞–∫–∏, —Ä–µ–∞–ª—å–Ω–æ –±–∞–≥ –∏–ª–∏ —Å—Ç–æ–∏—Ç –Ω–µ –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥–µ—Ä—É.`);
				});
				
				
				
				
				cmd.hear(/^(?:wiki|–≤–∏–∫–∏)\s(.*)$/i, async (message, bot) => {
					let args = message.text.match(/^(?:wiki|–≤–∏–∫–∏)\s?(.*)/i);
					function isEmpty( str ) { if (str.trim() == '') return true; return false; }
						rq("https://ru.wikipedia.org/w/api.php?action=opensearch&search="+encodeURIComponent((args[1] ? args[1] : "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"))+"&meta=siteinfo&rvprop=content&format=json")
						.then((res) => {
							if(isEmpty(res[2][0])) {
								if(isEmpty(res[2][1])) {
									if(isEmpty(res[2][2])) return message.reply('–°—Ç–∞—Ç—å—è –Ω–µ –ø–æ–ª–Ω–∞—è, –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n\n–°—Å—ã–ª–∫–∞: ' + res[3][0]);
								} else {
									return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏! \n\n–°—Å—ã–ª–∫–∞: ${res[3][1]}`);
								}
							} else {
								return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏!\n\n–°—Å—ã–ª–∫–∞: ${res[3][0]}`);
							}
						});
				});
				
				cmd.hear(/^(?:–ø–æ–º–æ—â—å)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].toLowerCase();
				
					if(message.args[1] === '–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏" –ø–∏—à–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç –≤–≤–µ—Ä—Ö –Ω–æ–≥–∞–º–∏ (–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ü–∏—Ñ—Ä—ã, –±—É–∫–≤—ã –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∏ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –∞ —Ç–∞–∫–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª—ã)`);
					}
				
					if(message.args[1] === '—à–∞—Ä')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–®–∞—Ä" –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é —Ä–∞–Ω–¥–æ–º–∞ –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`);
					}
				
					if(message.args[1] === '–∏–Ω—Ñ–∞')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ò–Ω—Ñ–∞" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —à–∞–Ω—Å —á–µ–≥–æ-–ª–∏–±–æ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã "–®–∞–Ω—Å" –∏–ª–∏ "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"`);
					}
				
					if(message.args[1] === '–≤—ã–±–µ—Ä–∏')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–í—ã–±–µ—Ä–∏" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.`);
					}
				
					if(message.args[1] === '–∫–∞–∑–∏–Ω–æ')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ö–∞–∑–∏–Ω–æ" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —É–º–Ω–æ–∂–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞–≤–∫—É (–ú–æ–≥—É—Ç –≤—ã–ø–∞—Å—Ç—å –º–Ω–æ–∂–∏—Ç–µ–ª–∏ —Ö0, —Ö0.25, —Ö0.5, x0.75, —Ö1, —Ö2, —Ö5, —Ö50). –ß—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤—Å—é —Å—É–º–º—É –≤–≤–µ–¥–∏—Ç–µ "–ö–∞–∑–∏–Ω–æ –≤—Å–µ" –∏–ª–∏ "–ö–∞–∑–∏–Ω–æ –≤–∞–±–∞–Ω–∫"`);
					}
				
					if(message.args[1] === '–∫—É–±–∏–∫')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ö—É–±–∏–∫" —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≤–∞—à–µ —á–∏—Å–ª–æ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º –æ—Ç 1 –¥–æ 6, –µ—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–ª–∏, —Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "–ö—É–±"`);
					}
				
					if(message.args[1] === '—Ç—Ä–µ–π–¥')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–¢—Ä–µ–π–¥" - —Å–∏–º—É–ª—è—Ç–æ—Ä –±–∏–Ω–∞—Ä–Ω—ã—Ö –æ–ø—Ü–∏–æ–Ω–æ–≤. –í–≤–µ–¥–∏—Ç–µ "–¢—Ä–µ–π–¥ –≤–≤–µ—Ä—Ö (—Å—É–º–º–∞)" –µ—Å–ª–∏ –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è, –∏–ª–∏ "–¢—Ä–µ–π–¥ –≤–Ω–∏–∑ (—Å—É–º–º–∞)" –µ—Å–ª–∏ –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å—Å—è.`);
					}
				
					if(message.args[1] === '—Å—Ç–∞–∫–∞–Ω—á–∏–∫')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–°—Ç–∞–∫–∞–Ω—á–∏–∫" –≤—ã –º–æ–∂–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –∞–Ω–∞–ª–æ–≥ –∏–≥—Ä—ã "–ù–∞–ø—ë—Ä—Å—Ç–∫–∏". –ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –≤–≤–µ–¥–∏—Ç–µ "–°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞]".`);
					}
				
					if(message.args[1] === '—Ä–∞–±–æ—Ç–∞')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–†–∞–±–æ—Ç–∞" –≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω—É –∏–∑ —Ä–∞–±–æ—Ç. –ß—Ç–æ–±—ã –æ—Ç—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–≤—ã—Ö –Ω–µ–¥–µ–ª—å (–ö–æ–º–∞–Ω–¥–∞ "–†–∞–±–æ—Ç–∞—Ç—å"). –î–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è —Å —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ "–£–≤–æ–ª–∏—Ç—å—Å—è".`);
					}
				
					if(message.args[1] === '–±–∏–∑–Ω–µ—Å')
					{
						return message.send(`–í–ª–∞–¥–µ—è –±–∏–∑–Ω–µ—Å–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ–º–∞–ª–æ –¥–µ–Ω–µ–≥:
						–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä] - –∫—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å
						–ë–∏–∑–Ω–µ—Å - –≤–∞—à –±–∏–∑–Ω–µ—Å
						–ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á—ë—Ç–∞ –±–∏–∑–Ω–µ—Å–∞
						–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å - –ø—Ä–æ–¥–∞–∂–∞ –±–∏–∑–Ω–µ—Å–∞`);
					}
				
					if(message.args[1] === '—Ä–µ—à–∏')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–†–µ—à–∏" —Ä–µ—à–∞–µ—Ç –≤–∞—à –ø—Ä–∏–º–µ—Ä (–†–µ—à–∏ 5 + 5).
						–ö–æ–º–∞–Ω–¥–∞ —É–º–µ–µ—Ç:
						–°–∫–ª–∞–¥—ã–≤–∞—Ç—å (+)
						–í—ã—á–∏—Ç–∞—Ç—å (-)
						–£–º–Ω–æ–∂–∞—Ç—å (*)
						–î–µ–ª–∏—Ç—å (/)`);
					}
				
					if(message.args[1] === '–∫—É—Ä—Å')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ö—É—Ä—Å" –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –ë–∏—Ç–∫–æ–∏–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.`);
					}
				
					if(message.args[1] === '–ø—Ä–æ—Ñ–∏–ª—å')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü—Ä–æ—Ñ–∏–ª—å" –≤—ã–≤–æ–¥–∏—Ç –≤–∞—à—É –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.`);
					}
				
					if(message.args[1] === '–±–∞–ª–∞–Ω—Å')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ë–∞–ª–∞–Ω—Å" –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª-–≤–æ –≤–∞–ª—é—Ç—ã –Ω–∞ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ.`);
					}
				
					if(message.args[1] === '–±–∞–Ω–∫')
					{
						return message.send(`–ü—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã "–ë–∞–Ω–∫" (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤) –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤–∞—à–∞ —Å—É–º–º–∞ –Ω–∞ —Å—á—ë—Ç–µ. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ —Å—á—ë—Ç –¥–µ–Ω—å–≥–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ [—Å—É–º–º–∞]" (–ú–∞–∫—Å–∏–º—É–º 250.000.000.000$). –ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑ –±–∞–Ω–∫–∞ –≤–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ —Å–Ω—è—Ç—å/–≤–∑—è—Ç—å [—Å—É–º–º–∞]".
						–°—É–º–º–∞ –≤ –±–∞–Ω–∫–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å (–±–æ–ª—å—à–µ —Å—É–º–º–∞ - –±–æ–ª—å—à–µ –ø—Ä–∏–±—ã–ª—å).`);
					}
				
					if(message.args[1] === '—Ä–µ–π—Ç–∏–Ω–≥')
					{
						return message.send(`–ü—É—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ "–†–µ–π—Ç–∏–Ω–≥" (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤) –≤—ã–≤–æ–¥–∏—Ç –≤–∞—à–µ –∫–æ–ª-–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ (—Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ). –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–ª—é–±–æ–µ —á–∏—Å–ª–æ) –≤—ã –∫—É–ø–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –µ–¥–∏–Ω–∏—Ü —Ä–µ–π—Ç–∏–Ω–≥–∞ (üëë1 = 250.000.000$). –†–µ–π—Ç–∏–Ω–≥ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–æ–ø–µ.`);
					}
				
					if(message.args[1] === '–Ω–∏–∫')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ù–∏–∫" –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–µ–±–µ –Ω–∏–∫ –¥–ª–∏–Ω–Ω–æ—é –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤. –¢–∞–∫–∂–µ, –Ω–∏–∫ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º/–Ω–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º –≤ —Ç–æ–ø–µ "–ù–∏–∫ –≤–∫–ª" –∏ "–ù–∏–∫ –≤—ã–∫–ª"`);
					}
				
					if(message.args[1] === '–º–∞–≥–∞–∑–∏–Ω')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ú–∞–≥–∞–∑–∏–Ω" –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏.`);
					}
				
					if(message.args[1] === '–ø—Ä–æ–¥–∞—Ç—å')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ü—Ä–æ–¥–∞—Ç—å" –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –ª—é–±–æ–π –ø—Ä–µ–¥–º–µ—Ç (–ú–∞—à–∏–Ω—É, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä—É, —Ç–µ–ª–µ—Ñ–æ–Ω, —è—Ö—Ç—É, —Å–∞–º–æ–ª–µ—Ç, –≤–µ—Ä—Ç–æ–ª–µ—Ç, –±–∏—Ç–∫–æ–∏–Ω, —Ñ–µ—Ä–º—É).`);
					}
				
					if(message.args[1] === '–ø–µ—Ä–µ–¥–∞—Ç—å')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü–µ—Ä–µ–¥–∞—Ç—å" –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–∞–º–∏ —Å—É–º–º—É –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É (–ü–µ—Ä–µ–¥–∞—Ç—å ${message.user.uid} 1000).`);
					}
				
					if(message.args[1] === '—Ç–æ–ø')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–¢–æ–ø" –≤—ã–≤–æ–¥–∏—Ç 10 –∏–≥—Ä–æ–∫–æ–≤ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º.`);
					}
				
					if(message.args[1].includes('–±—Ä–∞–∫'))
					{
						return message.send(`–ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã "–ë—Ä–∞–∫", "–ë—Ä–∞–∫–∏", "—Ä–∞–∑–≤–æ–¥", –≤—ã –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞–º—É–∂/—Ä–∞–∑–≤–æ–¥–∏—Ç—å—Å—è.
						–ë—Ä–∞–∫ [id] - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
						–ë—Ä–∞–∫–∏ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
						–†–∞–∑–≤–æ–¥ - ...`);
					}
				
					if(message.args[1] === '–¥–∞—Ç–∞')
					{
						return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–î–∞—Ç–∞" –≤—ã–≤–æ–¥–∏—Ç –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç–µ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å id —á–µ–ª–æ–≤–µ–∫–∞.`);
					}
				
					if(message.args[1] === '—Ä–µ–ø–æ—Ä—Ç')
					{
						return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–†–µ–ø–æ—Ä—Ç" –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "–†–µ–ø", "–ñ–∞–ª–æ–±–∞", "Rep".`);
					}
				});
				
				cmd.hear(/^(?:–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏)\s([^]+)$/i, async (message, bot) => {
					let text = ``;
					message.args[1].split('').map(x=> {
						if(rotateText[x])
						{
							text += rotateText[x];
						}
					});
				
					return bot(`–¥–µ—Ä–∂–∏ : "${text.split('').reverse().join('')}"`)
				});
				
				cmd.hear(/^(?:—à–∞—Ä)\s([^]+)$/i, async (message, bot) => {
					const phrase = utils.pick(['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"']);
					return bot(phrase);
				});
				
				cmd.hear(/^(?:setwall)\s(.*)$/i, async (message, bot) => {
					if(message.user.settings.adm < 3) return;
				
					message.args[1] = message.args[1].replace("wall", "");
					message.args[1] = message.args[1].split('_');
					wall_to_send = "wall" + message.args[1][0] + "_" + message.args[1][1];
					return bot(`–æ–±–Ω–æ–≤–ª—ë–Ω –ø–æ—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏`);
				});
				
				cmd.hear(/^(?:textsend)\s([^]+)/i, async (message, bot) => {
				if(message.user.settings.adm < 3) return;
				
					await bot(`—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
					users.map(user => {
						vk.api.messages.send({ user_id: user.id, message: message.args[1], attachment: wall_to_send }).then(() => {
							console.log(`SENDED ${user.id}`)
						}).catch((err) => {
							console.log(`NOOOOT ${user.id}`)
						});
					});
				
					for(var i = 1; i < 900; i++) {
						vk.api.messages.send({ peer_id: 2000000000 + i, message: message.args[1], attachment: wall_to_send }).then(() => {
							console.log(`CHAT SENDED ${user.id}`)
						}).catch((err) => {
							console.log(`CHAT NOOOOT ${user.id}`)
						});
					}
					/*message.args[1] = message.args[1].replace("wall", "");
					message.args[1] = message.args[1].split('_');
					wall_to_send = "wall" + message.args[1][0] + "_" + message.args[1][1];
					return bot(`–æ–±–Ω–æ–≤–ª—ë–Ω –ø–æ—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏`);*/
				});
				
				cmd.hear(/^(?:–∏–Ω—Ñ–∞|—à–∞–Ω—Å|–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)\s([^]+)$/i, async (message, bot) => {
					const phrase = utils.pick(['—à–∞–Ω—Å —ç—Ç–æ–≥–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è –æ–∫–æ–ª–æ']);
					const percent = utils.random(100);
				
					return bot(`${phrase} ${percent}%`)
				});
				
				cmd.hear(/^(?:–≤—ã–±–µ—Ä–∏)\s([^]+)\s(?:–∏–ª–∏)\s([^]+)$/i, async (message, bot) => {
					const first = message.args[1];
					const second = message.args[2];
				
					const phrase = utils.pick([`–∫–æ–Ω–µ—á–Ω–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç`, `–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç –ª—É—á—à–µ`]);
					return bot(`${phrase}`);
				});
				
				cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|–ø—Ä—Ñ)$/i, async (message, bot) => {
					let text = ``;
				
					text += `üî• –ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: [${message.user.settings.adm.toString().replace(/0/gi, "–ò–≥—Ä–æ–∫ ‚úî").replace(/1/gi, "–°—É–ø–µ—Ä –ò–≥—Ä–æ–∫").replace(/2/gi, "–ê–¥–º–∏–Ω üî•").replace(/3/gi, "–°–æ–∑–¥–∞—Ç–µ–ª—å")}]\n`;
					text += `üîé ID: ${message.user.uid}\n`;
					text += `üí∞ –î–µ–Ω–µ–≥: ${utils.sp(message.user.balance)}$\n`;
					if(message.user.bank) text += `üí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$\n`;
					if(message.user.btc) text += `üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}\n`;
					text += `üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}\n`;
					if(message.user.work) text += `üëî –†–∞–±–æ—Ç–∞: ${works[message.user.work - 1].name}\n`;
					if(message.user.transport.strana) text += `‚ô¶ –°—Ç—Ä–∞–Ω–∞: [${stranas[message.user.transport.strana - 1].name}]\n`;
					if(message.user.marriage.partner) text += `üë¨ –ü–∞—Ä—Ç–Ω–µ—Ä: ${users[message.user.marriage.partner].tag}`;
					text += `üìõ –í–∞—Ä–Ω–æ–≤: [${utils.sp(message.user.warn)}/5]\n\n`;
				
					if(message.user.transport.car || message.user.transport.yacht || message.user.transport.airplane || message.user.transport.helicopter ||
						message.user.realty.home || message.user.realty.apartment ||
						message.user.misc.phone || message.user.misc.farm || message.user.business)
					{
						text += `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;
				
						if(message.user.transport.car) text += `‚†Äüöó –ú–∞—à–∏–Ω–∞: ${cars[message.user.transport.car - 1].name}\n`;
						if(message.user.transport.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${yachts[message.user.transport.yacht - 1].name}\n`;
						if(message.user.transport.airplane) text += `‚†Äüõ© –°–∞–º–æ–ª—ë—Ç: ${airplanes[message.user.transport.airplane - 1].name}\n`;
						if(message.user.transport.helicopter) text += `‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç: ${helicopters[message.user.transport.helicopter - 1].name}\n`;
				
						if(message.user.realty.home) text += `‚†Äüè† –î–æ–º: ${homes[message.user.realty.home - 1].name}\n`;
						if(message.user.odejda) text += ` üëò –û–¥–µ–∂–¥–∞: ${odejda[message.user.odejda - 1].name}\n`;
						if(message.user.realty.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${apartments[message.user.realty.apartment - 1].name}\n`;
						if(message.user.business) text += `üíº –ë–∏–∑–Ω–µ—Å:‚†Ä[${businesses[message.user.business - 1].icon} ${businesses[message.user.business - 1].name}]\n`;

						if(message.user.misc.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phones[message.user.misc.phone - 1].name}\n`;
						if(message.user.misc.farm) text += `‚†Äüîã –§–µ—Ä–º–∞: ${farms[message.user.misc.farm - 1].name} (${message.user.misc.farm_count} —à—Ç.)\n`;					}
					

					text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}`;
					return bot(`—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n${text}`);
				});
				
				cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => {
					let text = `–Ω–∞ —Ä—É–∫–∞—Ö: ${utils.sp(message.user.balance)}$`;
				
					if(message.user.bank) text += `\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`;
					if(message.user.btc) text += `\nüåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`;
				
					return bot(text);
				});
				
				cmd.hear(/^(?:–±–∞–Ω–∫)$/i, async (message, bot) => {
					return bot(`–Ω–∞ –≤–∞—à–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á—ë—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è ${utils.sp(message.user.bank)}$`);
				});
				
				cmd.hear(/^(?:–±–∞–Ω–∫)\s(?:—Å–Ω—è—Ç—å)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
					message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
					message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
					message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.bank);
				
					if(!Number(message.args[1])) return;
					message.args[1] = Math.floor(Number(message.args[1]));
				
					if(message.args[1] <= 0) return;
				
					if(message.args[1] > message.user.bank) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
					else if(message.args[1] <= message.user.bank)
					{
						message.user.balance += message.args[1];
						message.user.bank -= message.args[1];
				
						return bot(`–≤—ã —Å–Ω—è–ª–∏ ${utils.sp(message.args[1])}$
				üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
				üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
					}
				});
				
				cmd.hear(/^(?:–±–∞–Ω–∫)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
					message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
					message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
					message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
				
					if(!Number(message.args[1])) return;
					message.args[1] = Math.floor(Number(message.args[1]));
				
					if(message.args[1] <= 0) return;
					if(message.args[1] <= 49) return bot(`–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–∫–ª–∞–¥–∞ 50$`);
					if(message.user.bank + message.args[1] > 250000000000) return bot(`–Ω–∞ —Å—á–µ—Ç—É –≤ –±–∞–Ω–∫–µ –Ω–µ –º–æ–∂–µ—Ç –ª–µ–∂–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–æ–ª—å—à–µ 250.000.000.000$`);
				
					if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
					else if(message.args[1] <= message.user.balance)
					{
						message.user.balance -= message.args[1];
						message.user.bank += message.args[1];
				
						return bot(`–≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${utils.sp(message.args[1])}$`);
					}
				});
				
				cmd.hear(/^(?:—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)\s(–≤—ã–∫–ª|–≤–∫–ª)$/i, async (message, bot) => {
					if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
					{
						message.user.notifications = false;
						return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã! üîï`);
					}
				
					if(message.args[1].toLowerCase() === '–≤–∫–ª')
					{
						return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! üîî`);
					}
				});
				
				cmd.hear(/^(?:ban)\s([0-9]+)$/i, async (message, bot) => {
					message.user.foolder += 1;
					if(message.user.settings.adm < 3) return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ —Å –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ - –ê–¥–º–∏–Ω`);
					if(users[message.user.uid].settings.adm < users[message.args[1]].settings.adm) return message.send(`‚ö† ‚ûæ–ù–µ–ª—å–∑—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞!`);
						{
									let user = users.find(x=> x.uid === Number(message.args[1]));
						if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);
						if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
				
						user.ban = true;
						message.user.list_ban += 1;
						vk.api.messages.send({ 
							user_id: user.id, 
							attachment: 'photo-174226458_456239146',
							message: `
				[üòµ] >> [id${user.id}|${user.tag}], –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã. 
				[üí£] || –í–∞—Å –∑–∞–±–∞–Ω–∏–ª: + @id${message.user.id}(ADMINISTRATOR) + 
				[‚ö†] || –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã —Å ${new Date().getHours()}:${new Date().getMinutes()} - –ù–ê–í–ï–ß–ù–û
				
				üçÄ –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –≤ –≥—Ä—É–ø–ø–µ - [Bota]
				üéÅ –ó–∏–º–Ω–∏–µ —Å–∫–∏–¥–∫–∏ % (—Å–∫–æ—Ä–æ)` }); 
				
					return bot(`–í—ã —Å–º–æ–≥–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${user.tag}) - –Ω–∞–≤–µ—á–Ω–æ.`);
				}
				});
			
				
				cmd.hear(/^(?:set)\s([0-9]+)\s(.*)\s(.*)$/i, async (message, bot) => {
					if(message.user.admin == false) return;
					message.args[3] = message.args[3].replace(/(\.|\,)/ig, '');
					message.args[3] = message.args[3].replace(/(–∫|k)/ig, '000');
					message.args[3] = message.args[3].replace(/(–º|m)/ig, '000000');
				
					if(Number(message.args[3])) message.args[3] = Math.floor(Number(message.args[3]));
					if(message.args[3] == "true" || message.args[3] == "false") message.args[3] = message.args[3] == "true" ? true : false;
					if(message.args[2] == "admin" && bot_owner != message.user.id) return bot(`–∑–∞—â–∏—â—ë–Ω–Ω–æ–µ –ø–æ–ª–µ, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤–∞–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
				
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);
				
					if(user[message.args[2]] == null) return bot(`—Ç–∞–∫–æ–≥–æ –ø–æ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
					user[message.args[2]] = message.args[3];
				
					return bot(`–≤—ã —Å–º–µ–Ω–∏–ª–∏ –ø–æ–ª–µ ${message.args[2]} –∏–≥—Ä–æ–∫—É ${user.tag} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ ${message.args[3]}`);
				});
				
				cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s([0-9]+)$/i, async (message, bot) => {
					if(message.user.settings.adm < 3) return;
				
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);
				
					user.ban = false;
				
					return bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag}`);
				});
				
				
				
				
				cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|pay)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
					message.user.nalogy += (5000, 1000, 2133, 123, 932);
					message.args[2] = message.args[2].replace(/(\.|\,|\:)/ig, '');
					message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
					message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
					message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
				
					if(!Number(message.args[2])) return;
					message.args[2] = Math.floor(Number(message.args[2]));
				
					if(message.args[2] <= 0) return;
				
					if(message.args[2] > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
					else if(message.args[2] <= message.user.balance)
					{
						let user = users.find(x=> x.uid === Number(message.args[1]));
						if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`);
				
						if(user.uid === message.user.uid) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`);
				
						message.user.balance -= message.args[2];
						user.balance += message.args[2];
				
						vk.api.call("messages.send", {
				chat_id: 1,
				message: `‚úî –ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω:
				
				–ò–≥—Ä–æ–∫: @id${message.user.id}(${message.user.tag}) - (–ü–µ—Ä–µ–≤–µ–ª ${utils.sp(message.args[2])}) –∏–≥—Ä–æ–∫—É @id${user.id} (ID: ${user.uid})`,
				random_id: Math.random()
				});
				
						await bot(`–≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏ ${user.tag} ${utils.sp(message.args[2])}$
						üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
						if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
				‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$!
				üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` });
					}
				});

				cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)$/i, async (message, bot) => {
					return bot(`–≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}üëë`);
				});
				
				cmd.hear(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
					if(message.args[1].toLowerCase() === '–≤–∫–ª')
					{
						message.user.mention = true;
						return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!`);
					}
				
					if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
					{
						message.user.mention = false;
						return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
					}
				});
				
				cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {
					if(message.args[1].length >= 16) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤`);
				
					message.user.tag = message.args[1];
					return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å "${message.user.tag}"`);
				});
				
				cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
					return bot(`—Ä–∞–∑–¥–µ–ª—ã –º–∞–≥–∞–∑–∏–Ω–∞:
				üöô –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:
				‚†Ä‚†Äüöó –ú–∞—à–∏–Ω—ã
				‚†Ä‚†Äüõ• –Ø—Ö—Ç—ã
				‚†Ä‚†Äüõ© –°–∞–º–æ–ª–µ—Ç—ã
				‚†Ä‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª–µ—Ç—ã
				
				üèò –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å:
				‚†Ä‚†Äüè† –î–æ–º–∞
				‚†Ä‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä—ã
				
				üìå –û—Å—Ç–∞–ª—å–Ω–æ–µ:
				  üëò –û–¥–µ–∂–¥–∞
				‚†Ä‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω—ã
				‚†Ä‚†Ä‚≠ê –§–µ—Ä–º—ã
				‚†Ä‚†Äüëë –†–µ–π—Ç–∏–Ω–≥ [–∫–æ–ª-–≤–æ] - $250 –º–ª–Ω
				‚†Ä‚†Äüíº –ë–∏–∑–Ω–µ—Å—ã
				‚†Ä‚†Äüåê –ë–∏—Ç–∫–æ–∏–Ω [–∫–æ–ª-–≤–æ]
				
				üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
				‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "${utils.pick(['–¢–µ–ª–µ—Ñ–æ–Ω 7', '–ú–∞—à–∏–Ω–∞ 1', '–§–µ—Ä–º–∞ 2', '–ë–∏—Ç–∫–æ–∏–Ω 100', '–†–µ–π—Ç–∏–Ω–≥ 10'])}"`);
				});
				
				cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s(.*)\s?(.*)?$/i, async (message, bot) => {
					let options = {
						count: null
					}
				
					message.args[2] = message.args[1].split(' ')[1];
				
					if(!message.args[2]) options.count = 1;
					if(message.args[2])
					{
						message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
						message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
						message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
				
						message.args[2] = Math.floor(Number(message.args[2]));
						if(message.args[2] <= 0) return;
				
						if(!message.args[2]) options.count = 1;
						else if(message.args[2]) options.count = message.args[2];
					}
				
					if(/–º–∞—à–∏–Ω/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.transport.car) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã`);
						let a = Math.floor(cars[message.user.transport.car - 1].cost * 0.85);
				
						message.user.balance += Math.floor(cars[message.user.transport.car - 1].cost * 0.85);
						message.user.transport.car = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/—è—Ö—Ç/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.transport.yacht) return bot(`—É –≤–∞—Å –Ω–µ—Ç —è—Ö—Ç—ã`);
						let a = Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);
				
						message.user.balance += Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);
						message.user.transport.yacht = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é —è—Ö—Ç—É –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/—Å–∞–º–æ–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.transport.airplane) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª—ë—Ç–∞`);
						let a = Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);
				
						message.user.balance += Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);
						message.user.transport.airplane = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Å–∞–º–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/–≤(–∏|–µ|—è)—Ä—Ç(–∞|–æ)–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.transport.helicopter) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª—ë—Ç–∞`);
						let a = Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);
				
						message.user.balance += Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);
						message.user.transport.helicopter = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –≤–µ—Ä—Ç–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/–¥–æ–º/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.realty.home) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–æ–º–∞`);
						let a = Math.floor(homes[message.user.realty.home - 1].cost * 0.85);
				
						message.user.balance += Math.floor(homes[message.user.realty.home - 1].cost * 0.85);
						message.user.realty.home = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –¥–æ–º –∑–∞ ${utils.sp(a)}$`);
					}

					if(/–æ–¥–µ–∂–¥—É/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.odejda) return bot(`—É –≤–∞—Å –Ω–µ—Ç –æ–¥–µ–∂–¥—ã`);
						let a = Math.floor(odejda[message.user.odejda - 1].cost * 0.85);
				
						message.user.balance += Math.floor(odejda[message.user.odejda - 1].cost * 0.85);
						message.user.odejda = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –æ–¥–µ–∂–¥—É –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/–∫–≤–∞—Ä—Ç–∏—Ä/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.realty.apartment) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã`);
						let a = Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);
				
						message.user.balance += Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);
						message.user.realty.apartment = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/—Ç–µ–ª–µ—Ñ–æ–Ω/i.test(message.args[1].toLowerCase()))
					{
						if(!message.user.misc.phone) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞`);
						let a = Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);
				
						message.user.balance += Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);
						message.user.misc.phone = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/—Ñ–µ—Ä–º/i.test(message.args[1].toLowerCase()))
					{
						if(message.user.misc.farm == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
						if(options.count > message.user.misc.farm_count) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
						if(options.count <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
						let a = Math.floor(farms[message.user.misc.farm - 1].cost * options.count * 0.85);
				
						message.user.balance += a;
						message.user.misc.farm_count -= options.count;
						if(message.user.misc.farm_count == 0) message.user.misc.farm = 0;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ —Ñ–µ—Ä–º—ã (${options.value} —à—Ç.) –∑–∞ ${utils.sp(a)}$`);
					}
				
					if(/—Ä–µ–π—Ç–∏–Ω–≥/i.test(message.args[1].toLowerCase()))
					{
						if(options.count > message.user.rating) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞`);
						let a = (150000000 * options.count);
				
						message.user.balance += Math.floor(a);
						message.user.rating -= options.count;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count} ${utils.decl(options.count, ['—Ä–µ–π—Ç–∏–Ω–≥', '—Ä–µ–π—Ç–∏–Ω–≥–∞', '—Ä–µ–π—Ç–∏–Ω–≥–æ–≤'])} –∑–∞ ${utils.sp(Math.floor(a))}`);
					}
				
					if(/–±–∏–∑–Ω–µ—Å/i.test(message.args[1].toLowerCase()))
					{
						if(message.user.business.length == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞`);
						if(options.count < 1 || options.count > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å [1 –∏–ª–∏ 2]`);
						if(message.user.business.length < options.count) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
						options.count--;
						let a = Math.floor(businesses[message.user.business[options.count].id - 1][message.user.business[options.count].upgrade - 1].cost * 0.85);
				
						message.user.balance += Math.floor(a);
						message.user.business.splice(options.count, 1);
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∑–∞ ${ utils.sp(a) }$`);
					}
				
					if(/–±–∏—Ç–∫–æ–∏–Ω/i.test(message.args[1].toLowerCase()))
					{
						if(options.count > message.user.btc) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤`);
						let a = Math.floor(btc * options.count);
				
						message.user.balance += Math.floor(a);
						message.user.btc -= options.count;
				
						return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count}‚Çø –∑–∞ ${utils.sp(a)}$`);
					}
				});
				
				cmd.hear(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–º–∞—à–∏–Ω—ã:
				${message.user.transport.car === 1 ? 'üîπ' : 'üî∏'} 1. –°–∞–º–æ–∫–∞—Ç (500$)
				${message.user.transport.car === 2 ? 'üîπ' : 'üî∏'} 2. –í–µ–ª–æ—Å–∏–ø–µ–¥ (2.500$)
				${message.user.transport.car === 3 ? 'üîπ' : 'üî∏'} 3. –ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä (5.000$)
				${message.user.transport.car === 4 ? 'üîπ' : 'üî∏'} 4. –°–µ–≥–≤–µ–π (7.500$)
				${message.user.transport.car === 5 ? 'üîπ' : 'üî∏'} 5. –ú–æ–ø–µ–¥ (25.000$)
				${message.user.transport.car === 6 ? 'üîπ' : 'üî∏'} 6. –ú–æ—Ç–æ—Ü–∏–∫–ª (50.000$)
				${message.user.transport.car === 7 ? 'üîπ' : 'üî∏'} 7. –í–ê–ó 2109 (75.000$)
				${message.user.transport.car === 8 ? 'üîπ' : 'üî∏'} 8. –ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª (80.000$)
				${message.user.transport.car === 9 ? 'üîπ' : 'üî∏'} 9. –ë–∞–≥–≥–∏ (135.000$)
				${message.user.transport.car === 10 ? 'üîπ' : 'üî∏'} 10. –í–µ–∑–¥–µ—Ö–æ–¥ (200.000$)
				${message.user.transport.car === 11 ? 'üîπ' : 'üî∏'} 11. –õ–∞–¥–∞ Xray (350.000$)
				${message.user.transport.car === 12 ? 'üîπ' : 'üî∏'} 12. Audi Q7 (750.000$)
				${message.user.transport.car === 13 ? 'üîπ' : 'üî∏'} 13. BMW X6 (1.000.000$)
				${message.user.transport.car === 14 ? 'üîπ' : 'üî∏'} 14. Toyota FT-HS (1.750.000$)
				${message.user.transport.car === 15 ? 'üîπ' : 'üî∏'} 15. BMW Z4 M (2.500.000$)
				${message.user.transport.car === 16 ? 'üîπ' : 'üî∏'} 16. Subaru WRX STI (2.750.000$)
				${message.user.transport.car === 17 ? 'üîπ' : 'üî∏'} 17. Lamborghini Veneno (3.000.000$)
				${message.user.transport.car === 18 ? 'üîπ' : 'üî∏'} 18. Tesla Roadster (4.500.000$)
				${message.user.transport.car === 19 ? 'üîπ' : 'üî∏'} 19. Yamaha YZF R6 (5.000.000$)
				${message.user.transport.car === 20 ? 'üîπ' : 'üî∏'} 20. Bugatti Chiron (6.500.000$)
				${message.user.transport.car === 21 ? 'üîπ' : 'üî∏'} 21. Thrust SSC (35.000.000$)
				${message.user.transport.car === 22 ? 'üîπ' : 'üî∏'} 22. Ferrari LaFerrari (39.000.000$)
				${message.user.transport.car === 23 ? 'üîπ' : 'üî∏'} 23. Koenigsegg Regera (50.000.000$)
				${message.user.transport.car === 24 ? 'üîπ' : 'üî∏'} 24. Tesla Semi (75.000.000$)
				${message.user.transport.car === 25 ? 'üîπ' : 'üî∏'} 25. Venom GT (125.000.000$)
				${message.user.transport.car === 26 ? 'üîπ' : 'üî∏'} 26. Rolls-Royce (200.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ú–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]"`);
				
					const sell = cars.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.transport.car) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ (${cars[message.user.transport.car - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.transport.car = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:—è—Ö—Ç—ã|—è—Ö—Ç–∞)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`—è—Ö—Ç—ã:
				${message.user.transport.yacht === 1 ? 'üîπ' : 'üî∏'} 1. –í–∞–Ω–Ω–∞ (10.000$)
				${message.user.transport.yacht === 2 ? 'üîπ' : 'üî∏'} 2. Nauticat 331 (10.000.000$)
				${message.user.transport.yacht === 3 ? 'üîπ' : 'üî∏'} 3. Nordhavn 56 MS (15.000.000$)
				${message.user.transport.yacht === 4 ? 'üîπ' : 'üî∏'} 4. Princess 60 (25.000.000$)
				${message.user.transport.yacht === 5 ? 'üîπ' : 'üî∏'} 5. Azimut 70 (35.000.000$)
				${message.user.transport.yacht === 6 ? 'üîπ' : 'üî∏'} 6. Dominator 40M (50.000.000$)
				${message.user.transport.yacht === 7 ? 'üîπ' : 'üî∏'} 7. Moonen 124 (60.000.000$)
				${message.user.transport.yacht === 8 ? 'üîπ' : 'üî∏'} 8. Wider 150 (65.000.000$)
				${message.user.transport.yacht === 9 ? 'üîπ' : 'üî∏'} 9. Palmer Johnson 42M SuperSport (80.000.000$)
				${message.user.transport.yacht === 10 ? 'üîπ' : 'üî∏'} 10. Wider 165 (85.000.000$)
				${message.user.transport.yacht === 11 ? 'üîπ' : 'üî∏'} 11. Eclipse (150.000.000$)
				${message.user.transport.yacht === 12 ? 'üîπ' : 'üî∏'} 12. Dubai (300.000.000$)
				${message.user.transport.yacht === 13 ? 'üîπ' : 'üî∏'} 13. Streets of Monaco (750.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–Ø—Ö—Ç–∞ [–Ω–æ–º–µ—Ä]"`);
				
					const sell = yachts.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.transport.yacht) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —è—Ö—Ç–∞ (${yachts[message.user.transport.yacht - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —è—Ö—Ç—É"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.transport.yacht = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				
				
				cmd.hear(/^(?:—Å–∞–º–æ–ª(?:–µ|—ë)—Ç|—Å–∞–º–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`—Å–∞–º–æ–ª–µ—Ç—ã:
				${message.user.transport.airplane === 1 ? 'üîπ' : 'üî∏'} 1. –ü–∞—Ä–∞–ø–ª–∞–Ω (100.000$)
				${message.user.transport.airplane === 2 ? 'üîπ' : 'üî∏'} 2. –ê–ù-2 (350.000$)
				${message.user.transport.airplane === 3 ? 'üîπ' : 'üî∏'} 3. Cessna-172E (700.000$)
				${message.user.transport.airplane === 4 ? 'üîπ' : 'üî∏'} 4. Supermarine Spitfire (1.000.000$)
				${message.user.transport.airplane === 5 ? 'üîπ' : 'üî∏'} 5. BRM NG-5 (1.400.000$)
				${message.user.transport.airplane === 6 ? 'üîπ' : 'üî∏'} 6. Cessna T210 (2.600.000$)
				${message.user.transport.airplane === 7 ? 'üîπ' : 'üî∏'} 7. Beechcraft 1900D (5.500.000$)
				${message.user.transport.airplane === 8 ? 'üîπ' : 'üî∏'} 8. Cessna 550 (8.000.000$)
				${message.user.transport.airplane === 9 ? 'üîπ' : 'üî∏'} 9. Hawker 4000 (22.400.000$)
				${message.user.transport.airplane === 10 ? 'üîπ' : 'üî∏'} 10. Learjet 31 (45.000.000$)
				${message.user.transport.airplane === 11 ? 'üîπ' : 'üî∏'} 11. Airbus A318 (85.000.000$)
				${message.user.transport.airplane === 12 ? 'üîπ' : 'üî∏'} 12. F-35A (160.000.000$)
				${message.user.transport.airplane === 13 ? 'üîπ' : 'üî∏'} 13. Boeing 747-430 Custom (225.000.000$)
				${message.user.transport.airplane === 14 ? 'üîπ' : 'üî∏'} 14. C-17A Globemaster III (350.000.000$)
				${message.user.transport.airplane === 15 ? 'üîπ' : 'üî∏'} 15. F-22 Raptor (400.000.000$)
				${message.user.transport.airplane === 16 ? 'üîπ' : 'üî∏'} 16. Airbus 380 Custom (600.000.000$)
				${message.user.transport.airplane === 17 ? 'üîπ' : 'üî∏'} 17. B-2 Spirit Stealth Bomber (1.359.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–°–∞–º–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"`);
				
					const sell = airplanes.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.transport.airplane) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç (${airplanes[message.user.transport.airplane - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.transport.airplane = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç|–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã:
				${message.user.transport.helicopter === 1 ? 'üîπ' : 'üî∏'} 1. –®–∞—Ä–∏–∫ —Å –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–º (2$)
				${message.user.transport.helicopter === 2 ? 'üîπ' : 'üî∏'} 2. RotorWay Exec 162F (300.000$)
				${message.user.transport.helicopter === 3 ? 'üîπ' : 'üî∏'} 3. Robinson R44 (450.000$)
				${message.user.transport.helicopter === 4 ? 'üîπ' : 'üî∏'} 4. Hiller UH-12C (1.300.000$)
				${message.user.transport.helicopter === 5 ? 'üîπ' : 'üî∏'} 5. AW119 Koala (2.500.000$)
				${message.user.transport.helicopter === 6 ? 'üîπ' : 'üî∏'} 6. MBB BK 117 (4.000.000$)
				${message.user.transport.helicopter === 7 ? 'üîπ' : 'üî∏'} 7. Eurocopter EC130 (7.500.000$)
				${message.user.transport.helicopter === 8 ? 'üîπ' : 'üî∏'} 8. Leonardo AW109 Power (10.000.000$)
				${message.user.transport.helicopter === 9 ? 'üîπ' : 'üî∏'} 9. Sikorsky S-76 (15.000.000$)
				${message.user.transport.helicopter === 10 ? 'üîπ' : 'üî∏'} 10. Bell 429WLG (19.000.000$)
				${message.user.transport.helicopter === 11 ? 'üîπ' : 'üî∏'} 11. NHI NH90 (35.000.000$)
				${message.user.transport.helicopter === 12 ? 'üîπ' : 'üî∏'} 12. Kazan Mi-35M (60.000.000$)
				${message.user.transport.helicopter === 13 ? 'üîπ' : 'üî∏'} 13. Bell V-22 Osprey (135.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–í–µ—Ä—Ç–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"`);
				
					const sell = helicopters.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.transport.helicopter) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç (${homes[message.user.transport.helicopter - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.transport.helicopter = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:–¥–æ–º|–¥–æ–º–∞)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–¥–æ–º–∞:
				${message.user.realty.home === 1 ? 'üîπ' : 'üî∏'} 1. –ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ (250$)
				${message.user.realty.home === 2 ? 'üîπ' : 'üî∏'} 2. –ü–æ–¥–≤–∞–ª (3.000$)
				${message.user.realty.home === 3 ? 'üîπ' : 'üî∏'} 3. –ü–∞–ª–∞—Ç–∫–∞ (3.500$)
				${message.user.realty.home === 4 ? 'üîπ' : 'üî∏'} 4. –î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ (5.000$)
				${message.user.realty.home === 5 ? 'üîπ' : 'üî∏'} 5. –ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º (10.000$)
				${message.user.realty.home === 6 ? 'üîπ' : 'üî∏'} 6. –î–æ–º –≤ –ª–µ—Å—É (25.000$)
				${message.user.realty.home === 7 ? 'üîπ' : 'üî∏'} 7. –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º (37.500$)
				${message.user.realty.home === 8 ? 'üîπ' : 'üî∏'} 8. –î–∞—á–∞ (125.000$)
				${message.user.realty.home === 9 ? 'üîπ' : 'üî∏'} 9. –ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º (80.000$)
				${message.user.realty.home === 10 ? 'üîπ' : 'üî∏'} 10. –ö–æ—Ç—Ç–µ–¥–∂ (450.000$)
				${message.user.realty.home === 11 ? 'üîπ' : 'üî∏'} 11. –û—Å–æ–±–Ω—è–∫ (1.250.000$)
				${message.user.realty.home === 12 ? 'üîπ' : 'üî∏'} 12. –î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ (5.000.000$)
				${message.user.realty.home === 13 ? 'üîπ' : 'üî∏'} 13. –õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–± (7.000.000$)
				${message.user.realty.home === 14 ? 'üîπ' : 'üî∏'} 14. –û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º (12.500.000$)
				${message.user.realty.home === 15 ? 'üîπ' : 'üî∏'} 15. –ë–µ–ª—ã–π –¥–æ–º (20.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–î–æ–º [–Ω–æ–º–µ—Ä]"`);
				
					const sell = homes.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.realty.home) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º (${homes[message.user.realty.home - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.realty.home = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:–∫–≤–∞—Ä—Ç–∏—Ä–∞|–∫–≤–∞—Ä—Ç–∏—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–∫–≤–∞—Ä—Ç–∏—Ä—ã:
				${message.user.realty.apartment === 1 ? 'üîπ' : 'üî∏'} 1. –ß–µ—Ä–¥–∞–∫ (15.000$)
				${message.user.realty.apartment === 2 ? 'üîπ' : 'üî∏'} 2. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ (55.000$)
				${message.user.realty.apartment === 3 ? 'üîπ' : 'üî∏'} 3. –û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (175.000$)
				${message.user.realty.apartment === 4 ? 'üîπ' : 'üî∏'} 4. –î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (260.000$)
				${message.user.realty.apartment === 5 ? 'üîπ' : 'üî∏'} 5. –ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (500.000$)
				${message.user.realty.apartment === 6 ? 'üîπ' : 'üî∏'} 6. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã (1.600.000$)
				${message.user.realty.apartment === 7 ? 'üîπ' : 'üî∏'} 7. –î–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (4.000.000$)
				${message.user.realty.apartment === 8 ? 'üîπ' : 'üî∏'} 8. –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º (6.000.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ö–≤–∞—Ä—Ç–∏—Ä–∞ [–Ω–æ–º–µ—Ä]"`);
				
					const sell = apartments.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.realty.apartment) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞ (${apartments[message.user.realty.apartment - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.realty.apartment = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:—Ç–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω—ã)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`—Ç–µ–ª–µ—Ñ–æ–Ω—ã:
				${message.user.misc.phone === 1 ? 'üîπ' : 'üî∏'} 1. Nokia 108 (250$)
				${message.user.misc.phone === 2 ? 'üîπ' : 'üî∏'} 2. Nokia 3310 (2017) (500$)
				${message.user.misc.phone === 3 ? 'üîπ' : 'üî∏'} 3. ASUS ZenFone 4 (2.000$)
				${message.user.misc.phone === 4 ? 'üîπ' : 'üî∏'} 4. BQ Aquaris X (10.000$)
				${message.user.misc.phone === 5 ? 'üîπ' : 'üî∏'} 5. Sony Xperia XA (15.000$)
				${message.user.misc.phone === 6 ? 'üîπ' : 'üî∏'} 6. Samsung Galaxy S8 (30.000$)
				${message.user.misc.phone === 7 ? 'üîπ' : 'üî∏'} 7. Xiaomi Mi Mix (50.000$)
				${message.user.misc.phone === 8 ? 'üîπ' : 'üî∏'} 8. Torex FS1 (75.000$)
				${message.user.misc.phone === 9 ? 'üîπ' : 'üî∏'} 9. iPhone X (100.000$)
				${message.user.misc.phone === 10 ? 'üîπ' : 'üî∏'} 10. –ú–µ–≥–∞—Ñ–æ–Ω –°1 (250.000$)
				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–¢–µ–ª–µ—Ñ–æ–Ω [–Ω–æ–º–µ—Ä]"`);
				
					const sell = phones.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.misc.phone) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω (${phones[message.user.misc.phone - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"`);
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost)
					{
						message.user.balance -= sell.cost;
						message.user.misc.phone = sell.id;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
					}
				});
				
				cmd.hear(/^(?:—Ñ–µ—Ä–º—ã)\s?([0-9]+)?\s?(.*)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–ú–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã:
				${message.user.misc.farm === 1 ? 'üîπ' : 'üî∏'} 1. 6U Nvidia 2‚Çø/—á–∞—Å (20.500.000$)
				${message.user.misc.farm === 2 ? 'üîπ' : 'üî∏'} 2. AntminerS9 10‚Çø/—á–∞—Å (100.000.000$)
				${message.user.misc.farm === 3 ? 'üîπ' : 'üî∏'} 3. FM2018-BT200 100‚Çø/—á–∞—Å (900.000.000$)
				${message.user.misc.farm === 4 ? 'üîπ' : 'üî∏'} 4. Genesis Mining 3000‚Çø/—á–∞—Å (9.000.000.000$)
				${message.user.misc.farm === 5 ? 'üîπ' : 'üî∏'} 5. GigaWatt 250000‚Çø/—á–∞—Å (800.000.000.000$)

				
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–§–µ—Ä–º—ã [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);
				
					const sell = farms.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					const count = Math.floor(message.args[2] ? Number(message.args[2]) : 1);
					if(count <= 0) return bot(`–Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å 0 —Ñ–µ—Ä–º –∏–ª–∏ –º–µ–Ω—å—à–µ`);
					if(count + message.user.misc.farm_count > 2000) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ 1000 —Ñ–µ—Ä–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ`);
					if(message.user.misc.farm != 0 && message.user.misc.farm != message.args[1]) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ñ–µ—Ä–º—É –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞`);
				
					if(message.user.balance < sell.cost * count) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(message.user.balance >= sell.cost * count)
					{
						message.user.balance -= sell.cost * count;
						message.user.misc.farm = sell.id;
						message.user.misc.farm_count += count;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" (${count} —à—Ç.) –∑–∞ ${utils.sp(sell.cost * count)}$`);
					}
				});
				
				cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
					message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
					message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
				
					if(!Number(message.args[1])) return;
					message.args[1] = Math.floor(Number(message.args[1]));
					if(message.user.settings.adm > 1) return bot(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥`)
				
					if(message.args[1] <= 0) return;
				
					if(( message.args[1] * 250000000 ) > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
					else if(( message.args[1] * 250000000 ) <= message.user.balance)
					{
						message.user.balance -= ( message.args[1] * 250000000 );
						message.user.rating += message.args[1];
				
						return bot(`–≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ ${message.args[1]}üëë –∑–∞ ${message.args[1] * 250000000}$`);
					}
				});
				
				cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {
					if(!message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å—ã:
				${message.user.business === 1 ? 'üéí' : 'üíº'} 1. –†–µ–∫–ª–∞–º–Ω–æ–µ –∞–≥–µ–Ω—Å—Ç–≤–æ - 50.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 400$/—á–∞—Å
				${message.user.business === 2 ? 'üéí' : 'üíº'} 2. –°–µ—Ä–≤–µ—Ä Minecraft - 100.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700$/—á–∞—Å
				${message.user.business === 3 ? 'üéí' : 'üíº'} 3. –°–µ—Ä–≤–µ—Ä Minecraft PE(1.20.1) - 300.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 2.500$/—á–∞—Å
				${message.user.business === 4 ? 'üéí' : 'üíº'} 4. –ú–∞–≥–∞–∑–∏–Ω(–ú–∞–≥–Ω–∏—Ç) - 500.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 3.800$/—á–∞—Å
				${message.user.business === 5 ? 'üéí' : 'üíº'} 5. –ú–∞–≥–∞–∑–∏–Ω(–Ø—Ä–º–∞—Ä–∫–∞) - 1.500.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 8.000$/—á–∞—Å
				${message.user.business === 6 ? 'üéí' : 'üíº'} 6. –®–∞—Ö—Ç–∞ - 25.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 70.000$/—á–∞—Å
				${message.user.business === 7 ? 'üéí' : 'üíº'} 7. –û—Ñ–∏—Å - 80.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 220.000$/—á–∞—Å
				${message.user.business === 8 ? 'üéí' : 'üíº'} 8. GAME - 150.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 300.000$/—á–∞—Å
				${message.user.business === 9 ? 'üéí' : 'üíº'} 9. –ù–µ—Ñ—Ç–µ–≤—ã—à–∫–∞ - 500.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700.000$/—á–∞—Å
				${message.user.business === 10 ? 'üéí' : 'üíº'} 10. –ê—Ç–æ–º–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è - 800.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 1.000.000$/—á–∞—Å
				${message.user.business === 11 ? 'üéí' : 'üíº'} 11. –ê–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏—è - 10.000.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 2.500.000$/—á–∞—Å
				${message.user.business === 12 ? 'üéí' : 'üíº'} 12. –ú–µ–∂–ø–ª–∞–Ω–µ—Ç–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å - 250.000.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 35.000.000$/—á–∞—Å
				${message.user.business === 13 ? 'üçî' : 'üíº'} 13. –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å - 420.000.000.000.000$
				‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 500.000.000$/—á–∞—Å
				–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä]"`);
				
					const sell = businesses.find(x=> x.id === Number(message.args[1]));
					if(!sell) return;
					if(message.user.business) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –±–∏–∑–Ω–µ—Å (${businesses[message.user.business - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å"`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ë–∏–∑–Ω–µ—Å"
						},
						"color": "primary"
						},
						{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å"
						},
						"color": "negative"
						}]
						]
						})
						})
				
					if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "üîë –ë–æ–Ω—É—Å"
						},
						"color": "primary"
						}]
						]
						})
						})
					else if(message.user.balance >= message.args[1])
					{
						message.user.balance -= sell.cost;
						message.user.business = sell.id;
						message.user.bizlvl = 1;
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`,
						{
							keyboard:JSON.stringify(
							{
							"inline": true,
							"buttons": [
							[{
							"action": {
							"type": "text",
							"payload": "{}",
							"label": "–ë–∏–∑–Ω–µ—Å"
							},
							"color": "primary"
							}]
							]
							})
							})
					}
				});
				
				cmd.hear(/^(?:–∫—É—Ä—Å)$/i, async (message, bot) => {
					return bot(`–∫—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:
				üí∏–ë–∏—Ç–∫–æ–∏–Ω: ${utils.sp(btc)}$`);
				});
				
				cmd.hear(/^(?:–±–∏—Ç–∫–æ–∏–Ω)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
					message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
					message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
				
					if(!Number(message.args[1])) return;
					message.args[1] = Math.floor(Number(message.args[1]));
				
					if(message.args[1] <= 0) return;
				
					if(( message.args[1] * btc ) > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
				–ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞: ${btc}$`);
					else if(( message.args[1] * btc ) <= message.user.balance)
					{
						message.user.balance -= ( message.args[1] * btc );
						message.user.btc += message.args[1];
				
						return bot(`–≤—ã –∫—É–ø–∏–ª–∏ ${utils.sp(message.args[1])}‚Çø –∑–∞ ${utils.sp(message.args[1] * btc)}$`);
					}
				});
				
				cmd.hear(/^(?:–¢–æ–ø|top)$/i, async (message, bot) => { 
					return bot(`üç© –°–ø–∏—Å–æ–∫ —Ç–æ–ø–æ–≤ ¬ª
					
					[ üëë ] –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥ - –°–ø–∏—Å–æ–∫ —Ç–æ–ø–æ–≤—ã—Ö —Ä–µ–±—è—Ç, –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É.
					[ üåü ] –¢–æ–ø –æ–ø—ã—Ç - –°–ø–∏—Å–æ–∫ —Ç–æ–ø–æ–≤—ã—Ö —Ä–µ–±—è—Ç, –ø–æ –æ–ø—ã—Ç—É.
					[ ‚úâ ] –¢–æ–ø —Ä–∞–Ω–≥–∏ - –°–ø–∏—Å–æ–∫ —Ç–æ–ø —Ä–µ–±—è—Ç, –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º.`);
					});

					cmd.hear(/^(?:—Ç–æ–ø –æ–ø—ã—Ç)$/i, async (message, bot) => {
						message.user.foolder += 1; 
							let top = [];
						
							users.map(x=> {
								top.push({ balance: x.balance, opit: x.opit, tag: x.tag, id: x.id, mention: x.mention });
							});
						
							top.sort((a, b) => {
								return b.opit - a.opit;
							});
						
							let text = ``;
							const find = () => {
								let pos = 1000;
						
								for (let i = 0; i < top.length; i++)
								{
									if(top[i].id === message.senderId) return pos = i;
								}
						
								return pos;
							}
						
							for (let i = 0; i < 10; i++)
							{
								if(!top[i]) return;
								const user = top[i];
						
								text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} | @id${user.id} (${user.tag}) ‚Äî üåü${utils.sp(user.opit)}
								`;
							}
						
							return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
								${text}
						‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
						${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üåü${utils.sp(message.user.opit)}\n\n\n
						
						`)
						await message.sendSticker(13294);
						});

						cmd.hear(/^(?:—Ç–æ–ø —Ä–µ–π—Ç–∏–Ω–≥)$/i, async (message, bot) => {
							let array = users.map(x=>x), balance = 0, bank = 0, btc = 0, rating = 0, ban = true;
						for(let i = 1; i < array.length; i++) {
						rating += array[i].rating
						}
							let top = [];
						
							users.map(x=> {
								top.push({ balance: x.balance, rating: x.rating, tag: x.tag, id: x.id, mention: x.mention });
							});
						
							top.sort((a, b) => {
								return b.rating - a.rating;
							});
						
							let text = ``;
							const find = () => {
								let pos = 1000;
						
								for (let i = 0; i < top.length; i++)
								{
									if(top[i].id === message.senderId) return pos = i;
								}
						
								return pos;
							}
						
							for (let i = 0; i < 10; i++)
							{
								if(!top[i]) return;
								const user = top[i];
						
								text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} | @id${user.id} (${user.tag}) ‚Äî üëë${utils.sp(user.rating)} | $${utils.rn(user.balance)}
								`;
							}
						
							bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
								${text}
						‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
						${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üëë${utils.sp(message.user.rating)} | $${utils.rn(message.user.balance)} \n üëë –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞: ${utils.sp(rating)}`);
						return message.sendSticker (9218);
						});

						cmd.hear(/^(?:—Ç–æ–ø —Ä–∞–Ω–≥–∏|—Ç–æ–ø —Å–æ–æ–±—â–µ–Ω–∏–π|—Ç–æ–ø —Å–º—Å)$/i, async (message, bot) => {
							if(message.user.msg < 25) return bot(`‚ùó | –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–µ—Ç, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞, –≤–∞–º –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ 25-–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ—Ç–µ!
						
						üì∂ –°–æ–æ–±—â–µ–Ω–∏–π: ${message.user.msg}/50`)
							let top = [];
						
							users.map(x=> {
								top.push({ msg: x.msg, tag: x.tag, id: x.id, mention: x.mention });
							});
						
							top.sort((a, b) => {
								return b.msg - a.msg;
							});
						
							let text = ``;
							const find = () => {
								let pos = 1000;
						
								for (let i = 0; i < top.length; i++)
								{
									if(top[i].id === message.senderId) return pos = i;
								}
						
								return pos;
							}
						
							for (let i = 0; i < 10; i++)
							{
								if(!top[i]) return;
								const user = top[i];
						
								text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} | @id${user.id} (${user.tag}) ‚Äî üåé${utils.sp(user.msg)} 
								`;
							}
						
							bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
								${text}
						‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
						${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üåé${utils.sp(message.user.msg)}`);
						return message.sendSticker (9218);
						});
				
				cmd.hear(/^(?:–±–æ–Ω—É—Å|@wild_bot1 üîë –ë–æ–Ω—É—Å|üîë –ë–æ–Ω—É—Å)$/i, async (message, bot) => {
					if(message.user.timers.bonus) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞`);
					let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
				
					setTimeout(() => {
						message.user.timers.bonus = false;
					}, 86400000);
				
					message.user.timers.bonus = true;
				
					if(prize === 1)
					{
						message.user.balance += 50000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000$`);
					}
				
					if(prize === 2)
					{
						message.user.btc += 1000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000‚Çø`);
					}
				
					if(prize === 3)
					{
						message.user.rating += 5;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 4)
					{
						message.user.rating += 1;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 5)
					{
						message.user.rating += 10;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 6)
					{
						message.user.rating += 2;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
					if(prize === 7)
					{
						message.user.rating += 3;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 3üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
					if(prize === 8)
					{
						message.user.rating += 4;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 4üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
					if(prize === 9)
					{
						message.user.bank += 1000000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
					if(prize === 10)
					{
						message.user.bank += 5000000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				
					if(prize === 11)
					{
						message.user.bank += 10000000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				
					if(prize === 12)
					{
						message.user.bank += 50000000;
						return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				});
				
				cmd.hear(/^(?:–±—Ä–∞–∫)\s([0-9]+)$/i, async (message, bot) => {
					if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å –∏–≥—Ä–æ–∫–æ–º ${users[message.user.marriage.partner].tag}`);
					if(Number(message.args[1]) === message.user.uid) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã–π—Ç–∏ –∑–∞–º—É–∂ –∑–∞ —Å–µ–±—è`);
				
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
				
					if(user.marriage.partner) return bot(`—ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ`);
				
					if(user.marriage.requests.find(x=> x == message.args[1])) return bot(`–≤—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É`);
				
					if(message.user.marriage.requests.find(x=> x == message.args[1]))
					{
						message.user.marriage.requests = [];
						message.user.marriage.partner = user.uid;
				
						user.marriage.requests = [];
						user.marriage.partner = message.user.uid;
				
						return bot(`–≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º "${user.tag}"`);
					}
				
					user.marriage.requests.push(message.user.uid);
					return bot(`–≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É "${user.tag}"`);
				});
				
				cmd.hear(/^(?:–±—Ä–∞–∫–∏)$/i, async (message, bot) => {
					if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);
					return bot(`–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
						${message.user.marriage.requests.map(x=> `–æ—Ç –∏–≥—Ä–æ–∫–∞ "${users[x].tag}" (ID: ${x})`).join('\n')}`);
				});
				
				cmd.hear(/^(?:—Ä–∞–∑–≤–æ–¥)$/i, async (message, bot) => {
					if(!message.user.marriage.partner) return bot(`–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);
				
					let user = users.find(x=> x.uid === message.user.marriage.partner);
				
					message.user.marriage.partner = 0;
					user.marriage.partner = 0;
				
					return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å —Å–≤–æ–±–æ–¥–Ω—ã–π —á–µ–ª–æ–≤–µ–∫`);
				});
				
				cmd.hear(/^(?:–¥–∞—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
				
					return bot(`–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ${user.tag}: ${user.regDate}`);
				});
				
			cmd.hear(/^—Ä–µ–ø–æ—Ä—Ç\s?([^]+)?/i, async (message, bot) => {
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°.`); 
if(!message.args[1]) return message.send(`–≤—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –∂–∞–ª–æ–±—É | —Ä–µ–ø–æ—Ä—Ç [—Ç–µ–∫—Å—Ç]`);

setTimeout(() => {
message.user.otpravka = false;
return;
}, 180000);

message.user.otpravka = true;

message.user.report_o = 1

vk.api.messages.send({ user_id: 531114362, forward_messages: message.id, message: `[–†–ï–ü–û–†–¢–ò–ö]\n\n[üë§] –ò–≥—Ä–æ–≤–æ–π ID: [id${message.user.id}| ${message.user.uid}] \n[üîà] –ñ–∞–ª–æ–±–∞: ${message.args[1]} \n[‚úâ] –î–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ "–û—Ç–≤–µ—Ç ${message.user.uid} –≤–∞—à —Ç–µ–∫—Å—Ç"` 
})

for(i=0;i<200000;i++){
if(users[i]){
if(users[i].right >= 4) { 
vk.api.messages.send({ peer_id: users[i].id, forward_messages: message.id, message: `[–†–ï–ü–û–†–¢–ò–ö]\nüë§ –ò–≥—Ä–æ–≤–æ–π ID: [id${message.user.id}| ${message.user.uid}] \nüîà –ñ–∞–ª–æ–±–∞: ${message.args[1]} \n –î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç ${message.user.uid} –≤–∞—à —Ç–µ–∫—Å—Ç`
}).then((res) => {}).catch((error) => {console.log('report error'); }); 
}
}
}

return bot("üìÑ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!");
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
const user = await users.find(x=> x.uid === Number(message.args[1]));
if(message.user.settings.adm < 2) return;
if(user.report_o === 0) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Ä–µ–ø–æ—Ä—Ç`);

if(!user) return;

vk.api.messages.send({ user_id: user.id, message: `‚úâ [id${user.id}| ${user.tag}], –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: \n
‚úâ –û—Ç–≤–µ—Ç: ${message.args[2]}.\n –° —É–≤–∞–∂–µ–Ω–∏–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä BOT: ‚Ññ${message.user.uid} ‚ù§ ` });

message.user.ans += 1;
user.report_o = 0;

return message.send(`‚úâ –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n ‚úâ –ö–æ–ª-–≤–æ –æ—Ç–≤–µ—Ç–æ–≤: +${message.user.pechenka += 1}!`) 
});

cmd.hear(/^(?:—É–≥–æ–ª—å)$/i, async (message, bot) => { 

return bot(`—É –≤–∞—Å ${utils.sp(message.user.ugol)} —É–≥–ª—è. üèµ`);

});
				
				cmd.hear(/^(?:—Ä–µ—à–∏)\s([0-9]+)\s(\+|\-|\/|\*)\s([0-9]+)$/i, async (message, bot) => {
					const result = eval(`${message.args[1]}${message.args[2]}${message.args[3]}`);
					return bot(`${message.args[1]}${message.args[2]}${message.args[3]}=${result}`);
				});
				
				cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
					if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
					${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);
				
					const work = works.find(x=> x.id === Number(message.args[1]));
					if(!work) return console.log(message.args[1]);
				
					if(work.requiredLevel > message.user.level) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!`);
					else if(work.requiredLevel <= message.user.level)
					{
						message.user.work = work.id;
						return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å - ${work.name}
						üëî –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å"`);
					}
				});
				
				cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)$/i, async (message, bot) => {
					if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
					${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);
					return bot(`–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:
					üîπ 1. –î–≤–æ—Ä–Ω–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~12.500$
					üîπ 2. –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~22.500$
					üîπ 3. –≠–ª–µ–∫—Ç—Ä–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~25.000$
					üîπ 4. –°–ª–µ—Å–∞—Ä—å - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~30.000$
					üîπ 5. –Æ—Ä–∏—Å—Ç - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~45.000$
					üîπ 6. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~55.000$
					üîπ 7. –ë–∞—Ä–º–µ–Ω - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~60.000$
					üîπ 8. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~75.000$
					üîπ 9. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~100.000$
					–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä]`);
				});
				
				cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
					if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ üò©
					–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞"`);
				
					if(message.user.timers.hasWorked) return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω.
					‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ 10 –º–∏–Ω—É—Ç`);
				
					setTimeout(() => {
						message.user.timers.hasWorked = false;
					}, 600000);
				
					message.user.timers.hasWorked = true;
				
					const work = works.find(x=> x.id === message.user.work);
					const earn = utils.random(work.min, work.max);
				
					message.user.balance += earn;
					message.user.exp += 1;
				
					return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω
					üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`);
				});
				
				cmd.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
					if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ`);
				
					message.user.work = 0;
					return bot(`–≤—ã —É–≤–æ–ª–∏–ª–∏—Å—å —Å–æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã`);
				});
				
				cmd.hear(/^(?:–∫—É–±–∏–∫|–∫—É–±)\s([1-6])$/i, async (message, bot) => {
					const int = utils.pick([1, 2, 3, 4, 5, 6]);
					if(int == message.args[1])
					{
						message.user.balance += 2000000;
						return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ 2.000.000$`);
					} else return bot(`–Ω–µ —É–≥–∞–¥–∞–ª–∏
					üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${int}`);
				});
				
			
cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ|–∫–æ–∑–∏–Ω–æ|.–∫–∞–∑–∏–Ω–æ|–∫–∞–∏–∑–Ω–æ|rgbpyj|–∫–ø–∏–∑–Ω–æ|rfpbyj)\s?(.*)?$/i, async (message, bot) => {
	message.user.nalogy += (100, 123, 1021, 200, 21, 500, 222, 789);
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë|dct|dc`)/ig, message.user.balance);
	let smilelose = ['üò©','üòï','üò¶','üòµ','üòü','üòî','üò©','üòø'].random(); 
    let smilewin = ['üòÑ','üòÅ','üòä','üòÉ','üòâ','üòú','üòã','ü§ó','üôÇ','üôÉ','üòå','ü§§','üòá','ü§™','üòà','üò∏','üòº','üò∫','üòé'].random();

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return bot(`–í–∞—à –±–∞–ª–∞–Ω—Å –ø—É—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–Ω—É—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –±–æ—Ç–µ`);

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
else if(message.args[1] <= message.user.balance && message.user.balance <= 50000000000) 
{ 
message.user.balance -= message.args[1]; 
const multiply = utils.pick([0, 1, 0.75, 2, 1, 0, 5, 2, 2, 2, 3, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 0.25, 0.25, 4, 0.25, 0.25, 5, 0.25, 4, 0.25, 0.25, 0.5, 40, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 50, 0.75, 0.75, 0.75, 0.75, 3, 0.75, 0.75, 0.75, 5, 0.75]); 

message.user.balance += Math.floor(message.args[1] * multiply); 

return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})$ ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})$ ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüí∞ ‚Äî –ë–∞–ª–∞–Ω—Å: (${utils.sp(message.user.balance)}$)`); 
} 

else if(message.args[1] <= message.user.balance && message.user.balance > 50000000000 && message.user.balance <= 300000000000) 
{ 
message.user.balance -= message.args[1]; 
const multiply = utils.pick([0, 10, 1, 5, 5, 1, 3, 10, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 1, 20, 0.25, 0.25, 0.25, 0.25, 0.25, 8, 0.5, 5, 0.5, 0.5, 0.5, 0.5, 13, 0.5, 0.75, 0.75, 0.75, 8, 0.75, 0.75, 0.75, 0.75, 19, 0.75]); 

message.user.balance += Math.floor(message.args[1] * multiply);

return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})$ ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})$ ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüí∞ ‚Äî –ë–∞–ª–∞–Ω—Å: (${utils.sp(message.user.balance)}$)`); 
} 

else if(message.args[1] <= message.user.balance && message.user.balance > 300000000000 && message.user.balance <= 1000000000000) 
{ 
message.user.balance -= message.args[1]; 
const multiply = utils.pick([0, 5, 1, 3, 3, 3, 1, 10, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 

message.user.balance += Math.floor(message.args[1] * multiply); 

return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})$ ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})$ ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüí∞ ‚Äî –ë–∞–ª–∞–Ω—Å: (${utils.sp(message.user.balance)}$)`); 
} 

else if(message.args[1] <= message.user.balance && message.user.balance > 1000000000000 && message.user.balance <= 10000000000000) 
{ 
message.user.balance -= message.args[1]; 
const multiply = utils.pick([0, 1, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 

message.user.balance += Math.floor(message.args[1] * multiply); 

return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})$ ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})$ ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüí∞ ‚Äî –ë–∞–ª–∞–Ω—Å: (${utils.sp(message.user.balance)}$)`); 
} 
else if(message.args[1] <= message.user.balance && message.user.balance > 10000000000000)
{ 
message.user.balance -= message.args[1]; 
const multiply = utils.pick([0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75]); 

message.user.balance += Math.floor(message.args[1] * multiply); 

return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})$ ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})$ ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \n üí∞ ‚Äî –ë–∞–ª–∞–Ω—Å: (${utils.sp(message.user.balance)}$)`); 
	}
});
				
				cmd.hear(/^(?:–≥–∏—Ñ)\s(.*)$/i, async (message, bot) => {
					   vk.api.call('docs.search', {q: message.args[1] + '.gif', count: 10})
						.then(response => {
							let items = response.items.map(x => `doc${x.owner_id}_${x.id}`).join(',');
							let item = utils.pick(response.items);
							message.send({attachment: items})
						})
				});
				
				cmd.hear(/^(?:–≤–∏–¥–µ–æ)\s(.*)$/i, async (message, bot) => {
					   vk.api.call('video.search', {q: message.args[1], count: 5, adult: 0, access_token: '730c3dc7b8aebbe413f0605729f20845efbc24b0fbbaff5d20555b6a750e6ef5ea4ef3597ef320acaac06'})
						.then(response => {
							let items = response.items.map(x => `video${x.owner_id}_${x.id}`).join(',');
							let item = utils.pick(response.items);
							message.send({attachment: items})
						})
				});
				
				cmd.hear(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)$/i, async (message, bot) => {
						let filter = (text) => {
							text = text.replace('&quot;', '"');
							text = text.replace('!&quot;', '"');
							text = text.replace('?&quot;', '"');
							text = text.replace(/(&quot;)/ig, '"');
							return text;
						}
				
					let anek = await getAnek();
					return bot(`–¥–µ—Ä–∂–∏:\n\n ${filter(anek)}\n\nü§§ >> –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ê–Ω–µ–∫–¥–æ—Ç" –µ—â—ë —Ä–∞–∑!`);
				
				function getAnek() {
					return rq('https://www.anekdot.ru/random/anekdot/').then(body => {
								let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
								res = res[0].split('</div>');
								return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
							});
				
					}
				});
				
				
				
				cmd.hear(/^(?:–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
					message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
					message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
					message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
					message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
				
				const phrase = utils.pick(['üòï', 'üôÇ',`‚ò∫`,`üòî`,`üòî`]);
					if(!Number(message.args[1])) return;
					message.args[1] = Math.floor(Number(message.args[1]));;
					if(message.args[1] <= 0) return;
				
					if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
					else if(message.args[1] <= message.user.balance)
					{
						message.user.balance -= message.args[1];
						const multiply = utils.pick([0.25, 0.75, 1, 0.5, 2, 2, 0.5, 0.50, 0.75, 0.75, 0.25, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 2, 2, 2, 2]);
				
						message.user.balance += Math.floor(message.args[1] * multiply);
						return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å ${phrase}` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}`}`} (x${multiply})
						üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
					}
				});
				
				
				cmd.hear(/^(?:–ø–æ—ç–º–∞|–ø–æ–µ–º–∞)$/i, async (message, bot) => {
						let filter = (text) => {
							text = text.replace('&quot;', '"');
							text = text.replace('!&quot;', '"');
							text = text.replace('?&quot;', '"');
							text = text.replace(/(&quot;)/ig, '"');
							return text;
						}
				
					let poem = await getPoem();
					return bot(`–¥–µ—Ä–∂–∏:\n\n ${filter(poem)}\n\nü§§ >> –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ü–æ—ç–º–∞" –µ—â—ë —Ä–∞–∑!`);
				
				function getPoem() {
					return rq('https://www.anekdot.ru/random/aphorism/').then(body => {
								let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
								res = res[0].split('</div>');
								return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
							});
				
					}
				});
				
				
				cmd.hear(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
					message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
					message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
					message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
					message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
				
					if(!Number(message.args[2])) return;
					message.args[2] = Math.floor(Number(message.args[2]));
				
					if(message.args[2] <= 0) return;
				
					if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
					else if(message.args[2] <= message.user.balance)
					{
						message.user.balance -= message.args[2];
				
						const rand = utils.pick([0, 1]);
						const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));
				
						if(rand === nav)
						{
							const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 1.25, 1.5, 1.75, 2, 2.5]);
							message.user.balance += Math.floor(message.args[2] * multiply);
				
							return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
							‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${message.args[2] * multiply}$
							üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}$`);
						} else {
							return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
							‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${message.args[2]}$
							üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}`);
						}
					}
				});
				
				cmd.hear(/^(?:—Å—Ç–∞–∫–∞–Ω—á–∏–∫)\s([1-3])\s(.*)$/i, async (message, bot) => {
					message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
					message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
					message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
					message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
				
					if(!Number(message.args[2])) return;
					message.args[2] = Math.floor(Number(message.args[2]));
				
					if(message.args[2] <= 0) return;
				
					if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
					else if(message.args[2] <= message.user.balance)
					{
						message.user.balance -= message.args[2];
				
						const multiply = utils.pick([0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65]);
						const cup = utils.random(1, 3);
				
						if(cup == message.args[1])
						{
							message.user.balance += Math.floor(message.args[2] * multiply);
							return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${message.args[2] * multiply}`);
						} else {
							return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${cup} —Å—Ç–∞–∫–∞–Ω—á–∏–∫`);
						}
					}
				});
				
				cmd.hear(/^(?:—Ä—É–ª–µ—Ç–∫–∞)\s?(.*)?$/i, async (message, bot) => {
					if(!message.args[1])
					{
						if(message.user.roulette == -1) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –†—É–ª–µ—Ç–∫–∞ [—Å—Ç–∞–≤–∫–∞]`);
						if(message.user.roulette == 0) return bot(`–≤—ã –Ω–µ —Å–¥–µ–ª–∞–ª–∏ –Ω–∏ 1 –≤—ã—Å—Ç—Ä–µ–ª–∞`);
						const win = Math.floor((message.user.roulette + 1) * message.user.roulette_bet);
						message.user.balance += win;
						message.user.roulette = -1;
						message.user.roulette_bet = 0;
						return bot(`–≤—ã —É—à–ª–∏ –∂–∏–≤—ã–º –∏ –∑–∞–±—Ä–∞–ª–∏ —Å —Å–æ–±–æ–π ${win}$`);
					}
					else
					{
						if(message.user.roulette != -1) return bot(`–≤—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –µ—â—ë 1 —Å—Ç–∞–≤–∫—É`);
						message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
						message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
						message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
						message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
						if(!Number(message.args[1])) return;
						message.args[1] = Math.floor(Number(message.args[1]));
				
						if(message.args[1] <= 0) return;
						if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
						else if(message.args[1] <= message.user.balance)
						{
							message.user.roulette = 0;
							message.user.roulette_bet = message.args[1];
							message.user.balance -= message.args[1];
							return bot(`–≤—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É<br>–î–ª—è –≤—ã—Å—Ç—Ä–µ–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –í—ã—Å—Ç—Ä–µ–ª`);
						}
					}
				});
				
				cmd.hear(/^(?:–≤—ã—Å—Ç—Ä–µ–ª)$/i, async (message, bot) => {
					if(message.user.roulette == -1) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –†—É–ª–µ—Ç–∫–∞ [—Å—Ç–∞–≤–∫–∞]`);
					if(utils.random(0, 100) < 50)
					{
						message.user.roulette += 1;
						bot(`–≤—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç–µ –∏ –æ—Å—Ç–∞—ë—Ç–µ—Å—å –≤ –∂–∏–≤—ã—Ö. –í—Å–µ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–æ–≤: ${message.user.roulette}`);
					}
					else
					{
						message.user.roulette = -1;
						message.user.roulette_bet = 0;
						bot(`–≤—ã –ø–æ–≥–∏–±–ª–∏ –ø—Ä–∏ –≤—ã—Å—Ç—Ä–µ–ª–µ –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É`);
					}
				});
				
				cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)$/i, async (message, bot) => {
					if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
				–î–ª—è –≤—ã–±–æ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`);
					const biz = businesses.find(x=> x.id === message.user.business);
					var lvlcash = biz.earn*message.user.bizlvl;
				var updprice2 = Math.floor(businesses[message.user.business - 1].cost * 2)*message.user.bizlvl
					return bot(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "${biz.name}":
					üí∏ –ü—Ä–∏–±—ã–ª—å: ${utils.sp(lvlcash)}$/—á–∞—Å
					üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.biz)}$
					üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.bizlvl}
					‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ!\n ${utils.sp(updprice2)}$`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å –≤—Å–µ"
						},
						"color": "primary"
						},
						{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–£–ª—É—á—à–∏—Ç—å –±–∏–∑–Ω–µ—Å"
						},
						"color": "negative"
						}]
						]
						})
						})
				});
				
				cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å|—É–ª—É—á—à–∏—Ç—å –±–∏–∑–Ω–µ—Å)$/i, async (message, bot) => {
					if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
				–î–ª—è –≤—ã–±–æ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`,
				{
					keyboard:JSON.stringify(
					{
					"inline": true,
					"buttons": [
					[{
					"action": {
					"type": "text",
					"payload": "{}",
					"label": "–ë–∏–∑–Ω–µ—Å—ã"
					},
					"color": "primary"
					}]
					]
					})
					})
					const biz = businesses.find(x=> x.id === message.user.business);
				
					var updprice = Math.floor(businesses[message.user.business - 1].cost * 2)*message.user.bizlvl;
				
					if(message.user.balance < updprice) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥. ${smileerror}`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ë–æ–Ω—É—Å"
						},
						"color": "primary"
						}]
						]
						})
						})
				
					message.user.bizlvl += 1;
					message.user.balance -= updprice;
				
					return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å. ${smilesuccess}
				üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`,
				{
					keyboard:JSON.stringify(
					{
					"inline": true,
					"buttons": [
					[{
					"action": {
					"type": "text",
					"payload": "{}",
					"label": "–£–ª—É—á—à–∏—Ç—å –±–∏–∑–Ω–µ—Å"
					},
					"color": "primary"
					}]
					]
					})
					})
				
				
				});
				
				cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å|–±–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å –≤—Å–µ)$/i, async (message, bot) => {
					if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
				–î–ª—è –≤—ã–±–æ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`,
				{
					keyboard:JSON.stringify(
					{
					"inline": true,
					"buttons": [
					[{
					"action": {
					"type": "text",
					"payload": "{}",
					"label": "–ë–∏–∑–Ω–µ—Å—ã"
					},
					"color": "primary"
					}]
					]
					})
					})
					if(!message.user.biz) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç–µ —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. ${smileerror}`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ë–∏–∑–Ω–µ—Å"
						},
						"color": "primary"
						}]
						]
						})
						})
				
				
					var cashlvlbiz = message.user.biz*message.user.bizlvl;
				
					message.user.balance += cashlvlbiz;
					message.user.biz = 0;
				
					bot(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(cashlvlbiz)}$ ${smilesuccess}`,
					{
						keyboard:JSON.stringify(
						{
						"inline": true,
						"buttons": [
						[{
						"action": {
						"type": "text",
						"payload": "{}",
						"label": "–ú–∞–≥–∞–∑–∏–Ω"
						},
						"color": "primary"
						}]
						]
						})
						})
					message.user.biz = 0;
					return message.sendSticker (8331);
				});
				
				cmd.hear(/^(?:—Ñ–µ—Ä–º–∞)$/i, async (message, bot) => {
					if(!message.user.misc.farm) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
					if(!message.user.farm_btc) return bot(`–Ω–∞ –≤–∞—à–µ–π —Ñ–µ—Ä–º–µ –ø—É—Å—Ç–æ, –Ω–æ–≤—ã–µ –±–∏—Ç–∫–æ–∏–Ω—ã –ø–æ—è–≤—è—Ç—Å—è —Å–∫–æ—Ä–æ`);
				
					const btc_ = message.user.farm_btc * message.user.misc.farm_count;
				
					message.user.btc += btc_;
					message.user.farm_btc = 0;
				
					return bot(`–≤—ã —Å–æ–±—Ä–∞–ª–∏ ${utils.sp(btc_)}‚Çø, —Å–ª–µ–¥—É—é—â–∏–µ –±–∏—Ç–∫–æ–∏–Ω—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ —á–∞—Å
					üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`);
				});
				
				cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)$/i, async (message, bot) => {
					return bot(`–≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏: ${users.filter(x=> x.referal === message.user.uid).length}
					–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–º –∑–∞—Å—á–∏—Ç–∞–ª–∏ –¥—Ä—É–≥–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "–†–µ—Ñ ${message.user.uid}"
				
					–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1.000.000$ (1 –º–∏–ª–ª–∏–æ–Ω)
					–ï—Å–ª–∏ –¥—Ä—É–≥ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É, —Ç–æ –æ–Ω –ø–æ–ª—É—á–∏—Ç 50.000.000$ (50 –º–∏–ª–ª–∏–æ–Ω–æ–≤)`);
				});
				
				cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)\s([0-9]+)$/i, async (message, bot) => {
					if(message.user.referal !== null) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É!`);
					let user = users.find(x=> x.uid === Number(message.args[1]));
				
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);—è
					if(user.id === message.senderId) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
				
					user.balance += 1000000;
					message.user.balance += 500000;
				
					message.user.referal = Number(message.args[1]);
				
					vk.api.messages.send({ user_id: user.id, message: `üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∞ –≤ –±–æ—Ç!
					üí∏ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 500.000$ –Ω–∞ –±–∞–ª–∞–Ω—Å.` });
					return bot(`–≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É.
					üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 1.000.000$`);
				});
				
				cmd.hear(/^(?:—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
					if(message.args[1] < 10 || message.args[1] >= 100) return;
				
					const int = utils.random(10, 99);
					message.args[1] = Number(message.args[1]);
				
					if(int === message.args[1])
					{
						message.user.balance += 10000000;
						return bot(`–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ.
						üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000$`);
					} else if(int !== message.args[1])
					{
						return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ "${int}"
						üéâ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.
				
						–ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –∫–æ–¥, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10.000.000`);
					}
				});
				
				cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
				if(message.user.settings.adm < 2) return bot(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
				message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
				message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
				message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 
				
				if(!Number(message.args[2])) return; 
				message.args[2] = Math.floor(Number(message.args[2])); 
				
				if(message.args[2] <= 0) return; 
				
				{ 
				let user = users.find(x=> x.uid === Number(message.args[1])); 
				if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 
				
				
				user.balance += message.args[2]; 
				
				
				await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
				if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
				–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
				üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
				} 
				});
				
				
				cmd.hear(/^(?:–≤—ã–¥–∞—Ç—årating)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
					if(message.user.settings.adm < 2) return bot(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
					message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
					message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
					message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 
					
					if(!Number(message.args[2])) return; 
					message.args[2] = Math.floor(Number(message.args[2])); 
					
					if(message.args[2] <= 0) return; 
					
					{ 
					let user = users.find(x=> x.uid === Number(message.args[1])); 
					if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 
					
					
					user.rating += message.args[2]; 
					
					
					await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
					if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
					–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
					üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
					} 
					});
				
					cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å –æ–ø—ã—Ç)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
						if(message.user.settings.adm < 2) return bot(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
						message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
						message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
						message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 
						
						if(!Number(message.args[2])) return; 
						message.args[2] = Math.floor(Number(message.args[2])); 
						
						if(message.args[2] <= 0) return; 
						
						{ 
						let user = users.find(x=> x.uid === Number(message.args[1])); 
						if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 
						
						
						user.opit += message.args[2]; 
						
						
						await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
						if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
						–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])} –æ–ø—ã—Ç–∞! 
						üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
						} 
						});
				
						cmd.hear(/^(?:removeopit)\s?([0-9]+)?/i, async (message, args, bot) => {
							message.user.foolder += 1;
							let user = users.find(x=> x.uid === Number(message.args[1]));
							if(message.user.settings.adm < 2) return(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
							if(!message.args[1] || !users[message.args[1]]) return message.send(`[üí∞] ¬ª –ü—Ä–∏–º–µ—Ä: 'removerub [ID]'`);
							users[message.args[1]].opit = 0;
							return message.send(`[üí∞] ¬ª –í—ã –∑–∞–±—Ä–∞–ª–∏ –≤—Å–µ –æ–ø—ã—Ç —É –∏–≥—Ä–æ–∫–∞ [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
						});
				
				cmd.hear(/^(?:removerub)\s?([0-9]+)?/i, async (message, args, bot) => {
					message.user.foolder += 1;
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(message.user.settings.adm < 2) return(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
					if(!message.args[1] || !users[message.args[1]]) return message.send(`[üí∞] ¬ª –ü—Ä–∏–º–µ—Ä: 'removerub [ID]'`);
					users[message.args[1]].balance = 0;
					return message.send(`[üí∞] ¬ª –í—ã –∑–∞–±—Ä–∞–ª–∏ –≤—Å–µ —Ä—É–±–ª–∏ —É –∏–≥—Ä–æ–∫–∞ [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
				});
				
				cmd.hear(/^(?:removerating)\s?([0-9]+)?/i, async (message, args, bot) => {
					message.user.foolder += 1;
					let user = users.find(x=> x.uid === Number(message.args[1]));
					if(message.user.settings.adm < 2) return bot(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n ‚ùó –ù–∞–ø–∏—à–∏—Ç–µ "–î–æ–Ω–∞—Ç"`);
					if(!message.args[1] || !users[message.args[1]]) return message.send(`[üí∞] ¬ª –ü—Ä–∏–º–µ—Ä: 'removerub [ID]'`);
					users[message.args[1]].rating = 0;
					return message.send(`[üí∞] ¬ª –í—ã –∑–∞–±—Ä–∞–ª–∏ –≤–µ—Å—å —Ä–µ–π—Ç–∏–Ω–≥ —É –∏–≥—Ä–æ–∫–∞ [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
				});
				
				cmd.hear(/^(?:restart)$/i, async (message, bot) => {
					if(message.senderId !== 459134303) return;
					await bot(`–í—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞...`);
				
					await saveUsers();
					process.exit(-1);
					console.log("node app")
				});
				
				cmd.hear(/^(?:adm)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
				
					if(message.user.settings.adm < 3) return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
					if(!Number(message.args[2])) return; 
					message.args[2] = Math.floor(Number(message.args[2])); 
					
					if(message.args[2] <= 0) return;
					
					{ 
					let user = users.find(x=> x.uid === Number(message.args[1])); 
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
					
					
					user.settings.adm = message.args[2]; 
					
					
					await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])} —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${smilesuccess}`); 
					if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
					–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${utils.sp(message.args[2])} —É—Ä–æ–≤–Ω—è! 
					üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
					} 
					});
				
					cmd.hear(/^(?:—Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∫—É|—Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞)\s(.*)$/i, async (message, bot) => { 
						message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
						message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
						message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
						message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
						
						if(message.user.settings.adm < 3) return;
						
						{ 
						let user = users.find(x=> x.uid === Number(message.args[1])); 
						if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 
						
						
						user.settings.adm = 0; 
						
						saveUsers();
						await bot(`–≤—ã —Å–Ω—è–ª–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∫—É *id${user.id} (${user.tag}).`); 
						vk.api.messages.send({ user_id: user.id, message: `–í—ã —Ç–µ–ø–µ—Ä—å –∏–≥—Ä–æ–∫.` }); 
						}
						});
				
				cmd.hear(/^(?:adm)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
				
					if(message.user.settings.adm < 8) return;
					if(!Number(message.args[2])) return; 
					message.args[2] = Math.floor(Number(message.args[2])); 
					
					if(message.args[2] <= 0) return;
					
					{ 
					let user = users.find(x=> x.uid === Number(message.args[1])); 
					if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
					
					
					user.settings.adm = message.args[2]; 
					
					
					await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])} —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${smilesuccess}`); 
					if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
					–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${utils.sp(message.args[2])} —É—Ä–æ–≤–Ω—è! 
					üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
					} 
					});
				
				
					cmd.hear(/^(?:–ë–æ—Ç|–û –±–æ—Ç–µ|j ,jnt|,jn)$/i, async (message, bot) => {
						message.user.nalogy += (100, 123, 234);
						let top = [];
						
						users.map(x=> {
						top.push({ balance: x.balance, rating: x.rating, tag: x.tag, id: x.id, mention: x.mention});
						});
						
						top.sort((a, b) => {
						return b.rating - a.rating;
						});
						
						let text = ``;
						const find = () => {
						let pos = 1000;
						
						for (let i = 0; i < top.length; i++)
						{
						if(top[i].id === message.senderId) return pos = i;
						}
						
						return pos;
						}
						
						for (let i = 0; i < 1; i++)
						{
						if(!top[i]) return;
						const user = top[i];
						
						text += ` @id${user.id} (${user.tag}) ‚Äî üëë${utils.sp(user.rating)}
						`;
						}
						
						const percent = utils.random(70);
						const ping = utils.random(300);
						
						let array = users.map(x=>x), balance = 0, bank = 0, btc = 0, rating = 0, ban = true;
						for(let i = 1; i < array.length; i++) {
						balance += array[i].balance
						bank += array[i].bank
						btc += array[i].btc
						rating += array[i].rating
						ban += array[i].ban
						}
						
						await bot(`
						üíõ ‚Äî –ü—Ä–æ–µ–∫—Ç: –õ–µ–≤ –ò–≥—Ä–æ–≤–æ–π –ë–æ—Ç
						ü§ñ ‚Äî –í–µ—Ä—Å–∏—è: (v2.6.5)
						üå¥ ‚Äî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: (${users.length})
						‚ù§ ¬ª –ù–∞–≥—Ä—É–∑–∫–∞: ${percent}%
						üì° ¬ª –ü–∏–Ω–≥: ${ping}
						‚úî ¬ª Uptime: ${uptime.days}–¥:${uptime.hours}—á:${uptime.min}–º:${uptime.sec}—Å
						
						üí∞ –°—É–º–º–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤: ${utils.sp(balance)}$
						üí≥ –ë–∞–Ω–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤: ${utils.sp(bank)}$
						üåê –ë–∏—Ç–∫–æ–∏–Ω—ã –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤: ${utils.sp(btc)}‚Çø
						üëë –†–µ–π—Ç–∏–Ω–≥ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ ${utils.sp(rating)}
						üîπ –í—Å–µ–≥–æ –ª—é–¥–µ–π –≤ –±–∞–Ω–µ ${utils.sp(ban)}
						
						üëë –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç - ${text} —Ç–æ–ø–µ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞`);
						});
				
				// log
					 
					 function game_log(id, name, count, win_lose) {
				 
					 // - - - - - - - - - - - - - - - - -   
						 if(!log.game[id]){ log.game[id] = { log: [] }  } 
						 log.game[id].log.push(`[${time()} | ${data()} | ${name}] –°—Ç–∞–≤–∫–∞: ${count}$ | –ò—Å—Ö–æ–¥: ${win_lose.toString().replace(/0/gi, "‚ùå").replace(/1/gi, "‚úÖ")}\n`) 
						if(log.game[id].log.length >= 15){ delete log.game[id].log.shift() }  
				
					 }       
					
				
					setInterval(async () => {
					users.filter(x=> x.misc.farm !== 0).map(x=> {
						if(x.misc.farm === 1)
						{
							x.farm_btc += x.misc.farm_count * 10;
						}
				
						if(x.misc.farm === 2)
						{
							x.farm_btc += x.misc.farm_count * 20;
						}
				
						if(x.misc.farm === 3)
						{
							x.farm_btc += x.misc.farm_count * 100;
						}
					});
				}, 900000);
				
				
					Array.prototype.random = function() { return this[Math.floor(this.length * Math.random())]; }
					/*==========================================================================================================*/
					function user_id(id) {
						 let ids = 0
						 if(uid[1][id]){
							 ids = uid[1][id].id
						 }    
						return ids; 
					}  
					/*==========================================================================================================*/
				
				function adm_log(is) {
						  let id = is[0];	
						let i = config;  
						for(i=0;i<200000;i++){
							if(users[i]){
							if(users[i].right >= 6){ 
								vk.api.call("messages.send", {
									peer_id: users[i].id,
									message: `‚ö† ‚ö† [ADM-LOG | –ò–≥—Ä–æ–∫: @id${users[is[0]].id}(${users[is[0]].tag}) || Id: ${users[is[0]].uid}] ‚ö† ‚ö†\n[ -> ${is[1]} <- ]`
								}).then((res) => {}).catch((error) => {console.log('report error'); });	
							}
						}
						}
					  }
				
							  setInterval(() =>{
						 for(i=0;i<100000;i++){
							 if(users[i]){
								  if(users[i].adm_time > 0){
									  users[i].adm_time -= 1;
									  if(users[i].adm_time == 0){
										  users[i].right = 0;
				
										  vk.api.call('messages.send', {
											user_id: users[i].id,
											message: `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è vip/moder/admin –ø—Ä–∞–≤ –∏—Å—Ç–µ–∫. –í—ã —Å–Ω—è—Ç—ã —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.`
										});
									  }
								  }
							 }
						 }
					 }, 3600000);  
				
				function data() {
						var date = new Date();
						let days = date.getDate();
						let month = date.getMonth() + 1; 
						if (month < 10) month = "0" + month;
						if (days < 10) days = "0" + days;
						var datas = days + ':' + month + ':2018' ;
						return datas;
					}
				
					setInterval(() => {
				for(a in users) {
				users[a].active++;
				}
				}, 2000);
				
					 function logs(id, ids, num, type) {
						 
					 // - - - - - - - - - - - - - - - - -  
						  if(type == 1){ 
							 if(!log.point[ids]){ log.point[ids] = { log: [] }  } 
							 if(!log.point[id]){ log.point[id] = { log: [] }  } 
							 log.point[id].log.push(`[${time()} | ${data()} | Pay] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							 log.point[ids].log.push(`[${time()} | ${data()} | Pay] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							if(log.point[id].log.length >= 15){ delete log.point[id].log.shift() } 
							if(log.point[ids].log.length >= 15){ delete log.point[id].log.shift() } 
						 }
						 if(type == 2){ 
							 if(!log.give[ids]){ log.give[ids] = { log: [] }  } 
							 if(!log.give[id]){ log.give[id] = { log: [] }  } 
							 log.give[id].log.push(`[${time()} | ${data()} | Give] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							 log.give[ids].log.push(`[${time()} | ${data()} | Give] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							if(log.give[id].log.length >= 15){ delete log.give[id].log.shift() } 
							if(log.give[ids].log.length >= 15){ delete log.give[id].log.shift() }  
						 }
						 if(type == 3){ 
							 if(!log.remove[ids]){ log.remove[ids] = { log: [] }  } 
							 if(!log.remove[id]){ log.remove[id] = { log: [] }  } 
							 log.remove[id].log.push(`[${time()} | ${data()} | Remove] –ó–∞–±—Ä–∞–ª [ID: ${id}] —É –∏–≥—Ä–æ–∫–∞ [ID: ${ids}] \n`)
							 log.remove[ids].log.push(`[${time()} | ${data()} | Remove] –ó–∞–±—Ä–∞–ª [ID: ${id}] —É –∏–≥—Ä–æ–∫–∞ [ID: ${ids}] \n`)
							if(log.remove[id].log.length >= 15){ delete log.remove[id].log.shift() } 
							if(log.remove[ids].log.length >= 15){ delete log.remove[id].log.shift() } 
						 } 
						 if(type == 4){ 
							 if(!log.admin[ids]){ log.admin[ids] = { log: [] }  } 
							 if(!log.admin[id]){ log.admin[id] = { log: [] }  } 
							 log.admin[id].log.push(`[${time()} | ${data()} | Admin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num} lvl\n`)
							 log.admin[ids].log.push(`[${time()} | ${data()} | Admin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num} lvl\n`)
							if(log.admin[id].log.length >= 15){ delete log.admin[id].log.shift() } 
							if(log.admin[ids].log.length >= 15){ delete log.admin[id].log.shift() } 
						 } 
						 if(type == 5){ 
							 if(!log.setwin[ids]){ log.setwin[ids] = { log: [] }  } 
							 if(!log.setwin[id]){ log.setwin[id] = { log: [] }  } 
							 log.setwin[id].log.push(`[${time()} | ${data()} | Setwin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}%\n`)
							 log.setwin[ids].log.push(`[${time()} | ${data()} | Setwin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}%\n`)
							if(log.setwin[id].log.length >= 15){ delete log.setwin[id].log.shift() } 
							if(log.setwin[ids].log.length >= 15){ delete log.setwin[id].log.shift() }  
						 } 
						 if(type == 6){ 
							 if(!log.warns[ids]){ log.warns[ids] = { log: [] }  } 
							 if(!log.warns[id]){ log.warns[id] = { log: [] }  } 
							 log.warns[id].log.push(`[${time()} | ${data()} | warn] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] | –ü—Ä–∏—á–∏–Ω–∞: ${num}\n`)
							 log.warns[ids].log.push(`[${time()} | ${data()} | warn] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] | –ü—Ä–∏—á–∏–Ω–∞: ${num}\n`)
							if(log.warns[id].log.length >= 15){ delete log.warns[id].log.shift() } 
							if(log.warns[ids].log.length >= 15){ delete log.warns[id].log.shift() }  
						 } 
					 }
					//
				
					// log
					 
					 function game_log(id, name, count, win_lose) {
				 
					 // - - - - - - - - - - - - - - - - -   
						 if(!log.game[id]){ log.game[id] = { log: [] }  } 
						 log.game[id].log.push(`[${time()} | ${data()} | ${name}] –°—Ç–∞–≤–∫–∞: ${count}$ | –ò—Å—Ö–æ–¥: ${win_lose.toString().replace(/0/gi, "‚ùå").replace(/1/gi, "‚úÖ")}\n`) 
						if(log.game[id].log.length >= 15){ delete log.game[id].log.shift() }  
				
					 }
				
				function getRandomElement(array) {
				return array[getRandomInt(array.lenght - 1)];  
				}
				
				
				function getRandomElement(array) { 
				return array[getRandomInt(array.length - 1)]; 
				}
				
				function spaces(string) {
				if (typeof string !== "string") string = string.toString();
				return string.split("").reverse().join("").match(/[0-9]{1,3}/g).join(".").split("").reverse().join("");
				};
				
				function getRandomInt(x, y) { 
				return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x); 
				}
				
					function restart() {
						   for(i=1;i < 200000; i++){  
							   if(message[1]){ 	 
								   if(message[1].users[i]){  
									  message[1].users[i].limits.bonus = false; 
									  message[1].users[i].limits.war = false;
									  message[1].users[i].limits.les = false;
									  message[1].users[i].hero.up = false;
								}
							}
						}
					} 
				
				
				  setInterval(() =>{ 
				for(i=1;i<200000;i++){ 
				   if(users[i]){ 
				 if(users[i].msg == 100) {users[i].rang = "–ù–∞—á–∏–Ω–∞—é—â–∏–π"} 
				 if(users[i].msg == 500) {users[i].rang = "–õ—é–±–∏—Ç–µ–ª—å –æ–±—â–µ–Ω–∏—è"} 
				 if(users[i].msg == 1000) {users[i].rang = "–û–±—Å–æ–ª—é—Ç–Ω—ã–π –ª—é–±–∏—Ç–µ–ª—å"} 
				 if(users[i].msg == 2000) {users[i].rang = "–°—Ç–∞—Ä—à–∏–π"} 
				 if(users[i].msg == 3000) {users[i].rang = "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª"} 
				 if(users[i].msg == 8000) {users[i].rang = "–ì–µ–Ω–µ—Ä–∞–ª–∏—Å—Å–∏–º—É—Å"} 
				 } 
				} 
				  }, 1000);
				
				  var uptime = {
					sec: 0,
					min: 0,
					hours: 0,
					days: 0,
				}
				
				let course = 5000;
				let updated = Date.now();
				
				function getUnix() {
					return Date.now();
				}
				
				function unixStamp(stamp) {
					let date = new Date(stamp),
						year = date.getFullYear(),
						month = date.getMonth() + 1,
						day = date.getDate(),
						hour = date.getHours() < 10 ? "0"+date.getHours() : date.getHours(),
						mins = date.getMinutes() < 10 ? "0"+date.getMinutes() : date.getMinutes(),
						secs = date.getSeconds() < 10 ? "0"+date.getSeconds() : date.getSeconds();
				
					return `${day}.${month}.${year}, ${hour}:${mins}:${secs}`;
				}
				
				setInterval(async () => {
					course = utils.random(4500, 6000);
					updated = Date.now();
				}, 600000);
				
					// log
					 function logs(id, ids, num, type) {
						 
					 // - - - - - - - - - - - - - - - - -  
						  if(type == 1){ 
							 if(!log.point[ids]){ log.point[ids] = { log: [] }  } 
							 if(!log.point[id]){ log.point[id] = { log: [] }  } 
							 log.point[id].log.push(`[${time()} | ${data()} | Pay] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							 log.point[ids].log.push(`[${time()} | ${data()} | Pay] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							if(log.point[id].log.length >= 15){ delete log.point[id].log.shift() } 
							if(log.point[ids].log.length >= 15){ delete log.point[id].log.shift() } 
						 }
						 if(type == 2){ 
							 if(!log.–≤—ã–¥–∞—Ç—å[ids]){ log.–≤—ã–¥–∞—Ç—å[ids] = { log: [] }  } 
							 if(!log.–≤—ã–¥–∞—Ç—å[id]){ log.–≤—ã–¥–∞—Ç—å[id] = { log: [] }  } 
							 log.–≤—ã–¥–∞—Ç—å[id].log.push(`[${time()} | ${data()} | Give] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							 log.–≤—ã–¥–∞—Ç—å[ids].log.push(`[${time()} | ${data()} | Give] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}$\n`)
							if(log.–≤—ã–¥–∞—Ç—å[id].log.length >= 15){ delete log.give[id].log.shift() } 
							if(log.–≤—ã–¥–∞—Ç—å[ids].log.length >= 15){ delete log.give[id].log.shift() }  
						 }
						 if(type == 3){ 
							 if(!log.removerub[ids]){ log.removecoins[ids] = { log: [] }  } 
							 if(!log.removerub[id]){ log.removecoins[id] = { log: [] }  } 
							 log.removerub[id].log.push(`[${time()} | ${data()} | Remove] –ó–∞–±—Ä–∞–ª [ID: ${id}] —É –∏–≥—Ä–æ–∫–∞ [ID: ${ids}] \n`)
							 log.removerub[ids].log.push(`[${time()} | ${data()} | Remove] –ó–∞–±—Ä–∞–ª [ID: ${id}] —É –∏–≥—Ä–æ–∫–∞ [ID: ${ids}] \n`)
							if(log.removerub[id].log.length >= 15){ delete log.remove[id].log.shift() } 
							if(log.removerub[ids].log.length >= 15){ delete log.remove[id].log.shift() } 
						 } 
						 if(type == 4){ 
							 if(!log.right[ids]){ log.right[ids] = { log: [] }  } 
							 if(!log.right[id]){ log.right[id] = { log: [] }  } 
							 log.right[id].log.push(`[${time()} | ${data()} | Admin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num} lvl\n`)
							 log.right[ids].log.push(`[${time()} | ${data()} | Admin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num} lvl\n`)
							if(log.right[id].log.length >= 15){ delete log.admin[id].log.shift() } 
							if(log.right[ids].log.length >= 15){ delete log.admin[id].log.shift() } 
						 } 
						 if(type == 5){ 
							 if(!log.setwin[ids]){ log.setwin[ids] = { log: [] }  } 
							 if(!log.setwin[id]){ log.setwin[id] = { log: [] }  } 
							 log.setwin[id].log.push(`[${time()} | ${data()} | Setwin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}%\n`)
							 log.setwin[ids].log.push(`[${time()} | ${data()} | Setwin] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] -> ${num}%\n`)
							if(log.setwin[id].log.length >= 15){ delete log.setwin[id].log.shift() } 
							if(log.setwin[ids].log.length >= 15){ delete log.setwin[id].log.shift() }  
						 } 
						 if(type == 6){ 
							 if(!log.warns[ids]){ log.warns[ids] = { log: [] }  } 
							 if(!log.warns[id]){ log.warns[id] = { log: [] }  } 
							 log.warns[id].log.push(`[${time()} | ${data()} | warn] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] | –ü—Ä–∏—á–∏–Ω–∞: ${num}\n`)
							 log.warns[ids].log.push(`[${time()} | ${data()} | warn] –í—ã–¥–∞–ª [ID: ${id}] –∏–≥—Ä–æ–∫—É [ID: ${ids}] | –ü—Ä–∏—á–∏–Ω–∞: ${num}\n`)
							if(log.warns[id].log.length >= 15){ delete log.warns[id].log.shift() } 
							if(log.warns[ids].log.length >= 15){ delete log.warns[id].log.shift() }  
						 } 
					 }
					//
				
					// log
					 
					 function game_log(id, name, count, win_lose) {
				 
					 // - - - - - - - - - - - - - - - - -   
						 if(!log.game[id]){ log.game[id] = { log: [] }  } 
						 log.game[id].log.push(`[${time()} | ${data()} | ${name}] –°—Ç–∞–≤–∫–∞: ${count}$ | –ò—Å—Ö–æ–¥: ${win_lose.toString().replace(/0/gi, "‚ùå").replace(/1/gi, "‚úÖ")}\n`) 
						if(log.game[id].log.length >= 15){ delete log.game[id].log.shift() }  
				
					 }
				
				  function timeStamp() {
					var date = new Date();
					var hours = date.getHours();
					var minutes = date.getMinutes();
					var seconds = date.getSeconds();
					if(minutes == 0) minutes = "&#127358;&#127358;";
					if(minutes == 1) minutes = "0&#8419;1&#8419;";
					if(minutes == 2) minutes = "0&#8419;2&#8419;";
					if(minutes == 3) minutes = "0&#8419;3&#8419;";
					if(minutes == 4) minutes = "0&#8419;4&#8419;";
					if(minutes == 5) minutes = "0&#8419;5&#8419;";
					if(minutes == 6) minutes = "0&#8419;6&#8419;";
					if(minutes == 7) minutes = "0&#8419;7&#8419;";
					if(minutes == 8) minutes = "0&#8419;8&#8419;";
					if(minutes == 9) minutes = "0&#8419;9&#8419;";
					if(minutes == 10) minutes = "1&#8419;&#127358;";
					if(minutes == 11) minutes = "1&#8419;1&#8419;";
					if(minutes == 12) minutes = "1&#8419;2&#8419;";
					if(minutes == 13) minutes = "1&#8419;3&#8419;";
					if(minutes == 14) minutes = "1&#8419;4&#8419;";
					if(minutes == 15) minutes = "1&#8419;5&#8419;";
					if(minutes == 16) minutes = "1&#8419;6&#8419;";
					if(minutes == 17) minutes = "1&#8419;7&#8419;";
					if(minutes == 18) minutes = "1&#8419;8&#8419;";
					if(minutes == 19) minutes = "1&#8419;9&#8419;";
					if(minutes == 20) minutes = "2&#8419;&#127358;";
					if(minutes == 21) minutes = "2&#8419;1&#8419;";
					if(minutes == 22) minutes = "2&#8419;2&#8419;";
					if(minutes == 23) minutes = "2&#8419;3&#8419;";
					if(minutes == 24) minutes = "2&#8419;4&#8419;";
					if(minutes == 25) minutes = "2&#8419;5&#8419;";
					if(minutes == 26) minutes = "2&#8419;6&#8419;";
					if(minutes == 27) minutes = "2&#8419;7&#8419;";
					if(minutes == 28) minutes = "2&#8419;8&#8419;";
					if(minutes == 29) minutes = "2&#8419;9&#8419;";
					if(minutes == 30) minutes = "3&#8419;&#127358;";
					if(minutes == 31) minutes = "3&#8419;1&#8419;";
					if(minutes == 32) minutes = "3&#8419;2&#8419;";
					if(minutes == 33) minutes = "3&#8419;3&#8419;";
					if(minutes == 34) minutes = "3&#8419;4&#8419;";
					if(minutes == 35) minutes = "3&#8419;5&#8419;";
					if(minutes == 36) minutes = "3&#8419;6&#8419;";
					if(minutes == 37) minutes = "3&#8419;7&#8419;";
					if(minutes == 38) minutes = "3&#8419;8&#8419;";
					if(minutes == 39) minutes = "3&#8419;9&#8419;";
					if(minutes == 40) minutes = "4&#8419;&#127358;";
					if(minutes == 41) minutes = "4&#8419;1&#8419;";
					if(minutes == 42) minutes = "4&#8419;2&#8419;";
					if(minutes == 43) minutes = "4&#8419;3&#8419;";
					if(minutes == 44) minutes = "4&#8419;4&#8419;";
					if(minutes == 45) minutes = "4&#8419;5&#8419;";
					if(minutes == 46) minutes = "4&#8419;6&#8419;";
					if(minutes == 47) minutes = "4&#8419;7&#8419;";
					if(minutes == 48) minutes = "4&#8419;8&#8419;";
					if(minutes == 49) minutes = "4&#8419;9&#8419;";
					if(minutes == 50) minutes = "5&#8419;&#127358;";
					if(minutes == 51) minutes = "5&#8419;1&#8419;";
					if(minutes == 52) minutes = "5&#8419;2&#8419;";
					if(minutes == 53) minutes = "5&#8419;3&#8419;";
					if(minutes == 54) minutes = "5&#8419;4&#8419;";
					if(minutes == 55) minutes = "5&#8419;5&#8419;";
					if(minutes == 56) minutes = "5&#8419;6&#8419;";
					if(minutes == 57) minutes = "5&#8419;7&#8419;";
					if(minutes == 58) minutes = "5&#8419;8&#8419;";
					if(minutes == 59) minutes = "5&#8419;9&#8419;";
				
					if(hours == 0) hours = "&#127358;&#127358;";
					if(hours == 1) hours = "0&#8419;1&#8419;";
					if(hours == 2) hours = "0&#8419;2&#8419;";
					if(hours == 3) hours = "0&#8419;3&#8419;";
					if(hours == 4) hours = "0&#8419;4&#8419;";
					if(hours == 5) hours = "0&#8419;5&#8419;";
					if(hours == 6) hours = "0&#8419;6&#8419;";
					if(hours == 7) hours = "0&#8419;7&#8419;";
					if(hours == 8) hours = "0&#8419;8&#8419;";
					if(hours == 9) hours = "0&#8419;9&#8419;";
					if(hours == 10) hours = "1&#8419;&#127358;";
					if(hours == 11) hours = "1&#8419;1&#8419;";
					if(hours == 12) hours = "1&#8419;2&#8419;";
					if(hours == 13) hours = "1&#8419;3&#8419;";
					if(hours == 14) hours = "1&#8419;4&#8419;";
					if(hours == 15) hours = "1&#8419;5&#8419;";
					if(hours == 16) hours = "1&#8419;6&#8419;";
					if(hours == 17) hours = "1&#8419;7&#8419;";
					if(hours == 18) hours = "1&#8419;8&#8419;";
					if(hours == 19) hours = "1&#8419;9&#8419;";
					if(hours == 20) hours = "2&#8419;&#127358;";
					if(hours == 21) hours = "2&#8419;1&#8419;";
					if(hours == 22) hours = "2&#8419;2&#8419;";
					if(hours == 23) hours = "2&#8419;3&#8419;";
					if(hours == 24) hours = "&#127358;&#127358;";
				
				
					var time = hours + ':' + minutes;
					return time;
				}
				function timeStamps() {
					var date = new Date();
					let days = date.getDate();
					let month = date.getMonth();
					if(days == 0) days = "0&#8419;0&#8419;";
					if(days == 1) days = "0&#8419;1&#8419;";
					if(days == 2) days = "0&#8419;2&#8419;";
					if(days == 3) days = "0&#8419;3&#8419;";
					if(days == 4) days = "0&#8419;4&#8419;";
					if(days == 5) days = "0&#8419;5&#8419;";
					if(days == 6) days = "0&#8419;6&#8419;";
					if(days == 7) days = "0&#8419;7&#8419;";
					if(days == 8) days = "0&#8419;8&#8419;";
					if(days == 9) days = "0&#8419;9&#8419;";
					if(days == 10) days = "1&#8419;0&#8419;";
					if(days == 11) days = "1&#8419;1&#8419;";
					if(days == 12) days = "1&#8419;2&#8419;";
					if(days == 13) days = "1&#8419;3&#8419;";
					if(days == 14) days = "1&#8419;4&#8419;";
					if(days == 15) days = "1&#8419;5&#8419;";
					if(days == 16) days = "1&#8419;6&#8419;";
					if(days == 17) days = "1&#8419;7&#8419;";
					if(days == 18) days = "1&#8419;8&#8419;";
					if(days == 19) days = "1&#8419;9&#8419;";
					if(days == 20) days = "2&#8419;0&#8419;";
					if(days == 21) days = "2&#8419;1&#8419;";
					if(days == 22) days = "2&#8419;2&#8419;";
					if(days == 23) days = "2&#8419;3&#8419;";
					if(days == 24) days = "2&#8419;4&#8419;";
					if(days == 25) days = "2&#8419;5&#8419;";
					if(days == 26) days = "2&#8419;6&#8419;";
					if(days == 27) days = "2&#8419;7&#8419;";
					if(days == 28) days = "2&#8419;8&#8419;";
					if(days == 29) days = "2&#8419;9&#8419;";
					if(days == 30) days = "3&#8419;0&#8419;";
					if(days == 31) days = "3&#8419;1&#8419;";
				
					if(month == 0) month = "0&#8419;1&#8419;";
					if(month == 1) month = "0&#8419;2&#8419;";
					if(month == 2) month = "0&#8419;3&#8419;";
					if(month == 3) month = "0&#8419;4&#8419;";
					if(month == 4) month = "0&#8419;5&#8419;";
					if(month == 5) month = "0&#8419;6&#8419;";
					if(month == 6) month = "0&#8419;7&#8419;";
					if(month == 7) month = "0&#8419;8&#8419;";
					if(month == 8) month = "0&#8419;9&#8419;";
					if(month == 9) month = "0&#8419;10&#8419;";
					if(month == 10) month = "1&#8419;11&#8419;";
					if(month == 11) month = "1&#8419;12&#8419;";
				
					var datas = days + ':' + month + ': 2&#8419;0&#8419;1&#8419;8&#8419;';
					return datas;
				}
				setInterval(() => {
					uptime.sec++;
					if(uptime.sec == 60) {
						uptime.sec = 0;
						uptime.min += 1;
					}
					if(uptime.min == 60) {
						uptime.min = 0;
						uptime.hours += 1;
					}
					if(uptime.hours == 24) {
						uptime.hours = 0;
						uptime.days += 1;
					}
				}, 1000);
				
				 function unixStampLeft(stamp) {
					stamp = stamp / 1000;
				
					let s = stamp % 60;
					stamp = ( stamp - s ) / 60;
				
					let m = stamp % 60;
					stamp = ( stamp - m ) / 60;
				
					let	h = ( stamp ) % 24;
					let	d = ( stamp - h ) / 24;
				
					let text = ``;
				
					if(d > 0) text += Math.floor(d) + " –¥. ";
					if(h > 0) text += Math.floor(h) + " —á. ";
					if(m > 0) text += Math.floor(m) + " –º–∏–Ω. ";
					if(s > 0) text += Math.floor(s) + " —Å.";
				
					return text;
				}
				
				function generateKeyboard(array) {
					let kb = [];
					if(array.length > 40) return false;
				
					for (let i = 0; i < 10; i += 1) {
						if(!array.slice(i * 4, i * 4 + 4)[0]) break;
						kb.push(array.slice(i * 4, i * 4 + 4));
					}
				
					kb.map((arr) => {
						arr.map((button, i) => {
							arr[i] = Keyboard.textButton({ label: button });
						});
					});
				
					return Keyboard.keyboard(kb);
				}
				
				/*setInterval(function () {
				  tcpp.ping({ address: 'vk.com' }, function(err, data) {
					vk2.api.status.set({text: `&#10035; Online | &#8986;  Time :${timeStamp()} | –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${botinfo.msg} —Å–æ–æ–±—â–µ–Ω–∏–µ.`})
				  });
				},60000);*/
				
				  //------------------------------------------------------------------------------------\\ 

				  cmd.hear(/^(?:eval)\s([^]+)$/i, async (message, bot) => {
					if(message.senderId !== 459134303| message.senderId !== 459134303) return;
				
					try {
						const result = eval(message.args[1]);
				
						if(typeof(result) === 'string')
						{
							return bot(`string: ${result}`);
						} else if(typeof(result) === '–ì–æ—Ç–æ–≤–æ')
						{
							return bot(`number: ${result}`);
						} else {
							return bot(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
						}
					} catch (e) {
						console.error(e);
						return bot(`–æ—à–∏–±–∫–∞:
						${e.toString()}`);
					}
				});

				cmd.hear(/^(?:–ü–æ–¥–∞—Ä–æ–∫)$/i, async (message, bot) => {
					if(message.user.bonustime > getUnix()) return bot(`–í—ã —É–∂–µ –±—Ä–∞–ª–∏ –ø–æ–¥–∞—Ä–æ–∫, –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Å—Ç–∞–ª–æ—Å—å : ${unixStampLeft(message.user.bonustime - Date.now())}`);
					let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
				
					if(prize === 1)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.balance += 500000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 500.000$`);
					}
				
					if(prize === 2)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.btc += 20000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 20.000‚Çø`);
					}
				
					if(prize === 3)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.rating += 5;
						return bot(`–≤–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 50üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 4)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.rating += 199;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 199üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 5)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.rating += 100;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 100üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
				
					if(prize === 6)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.rating += 20;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 20üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
					if(prize === 7)
					message.user.bonustime = getUnix() + 43200000;
					{
						message.user.rating += 30;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 30üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
					}
					if(prize === 8)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.btc += 10000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 10000btcüëë!\nüëë –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}`);
					}
					if(prize === 9)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.bank += 100000000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 100.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
					if(prize === 10)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.bank += 50000000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				
					if(prize === 11)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.bank += 100000000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–∫–µ –≤—ã –Ω–∞—à–ª–∏ 100.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				
					if(prize === 12)
					{
						message.user.bonustime = getUnix() + 43200000;
						message.user.bank += 500000000;
						return bot(`–≤ –ø–æ–¥–∞—Ä–æ–∫ –≤—ã –Ω–∞—à–ª–∏ 500.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
					}
				});

				cmd.hear(/^(?:–ø–æ–ª—É—á–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç|–∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç)\s?([^]+)?/i, async (message, args, bot) => {
					if(message.user.pasport += true) return message.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç`);
				});
				
				cmd.hear(/^(?:–ø–∞—Å–ø–æ—Ä—Ç|–ø–∞—Å–ø–∞—Ä—Ç)$/i, async (message, bot) => {	
					let user = message.user 
					if(message.user.pasport == false) return message.send(`¬ª üë§ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –ø–∞—Å–ø–æ—Ä—Ç–∞, –¥–æ—Å—Ç–∏–≥—à–µ–≥–æ 14+ –ª–µ—Ç:
					=================
					
					‚ùì¬ª 1. –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç ?
					- –ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É, –≤–µ–¥–∏—Ç–µ ‚Äú–ò–º—è –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ (–∏–º—è)‚Äù.
					‚ùì¬ª 2. –î–∞—Ç–∞ –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É, –≤–ø–∏—à–∏—Ç–µ ‚Äú–î–∞—Ç–∞ –†–æ–∂–¥–µ–Ω–∏—è (–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è)‚Äù.
					‚ùì ¬ª 3. –í–∞—à —Å—É–∂–µ–Ω–Ω—ã–π, –∏–ª–∏ —Å—É–∂–µ–Ω–Ω–∞—è, —Å –∫–µ–º –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±—Ä–∞–∫–µ? –ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É, –≤–∞—Å –Ω—É–∂–Ω–æ –≤–µ—Å—Ç–∏ ‚Äú–í –±—Ä–∞–∫–µ —Å (–∏–º—è)‚Äù.
					‚ùì4. ¬ª –ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É, –≤–ø–∏—à–∏—Ç–µ ‚Äú–ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (–∂–µ–ª–∞–µ–º–æ–µ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)‚Äù.
					‚ùì5. ¬ª –ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å ‚Äú–†–∞–±–æ—Ç–∞—é –≤ (–∂–µ–ª–∞–µ–º–æ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã)‚Äù.
					
					====================
					‚ùó–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç, –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ, –≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚Äú–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç‚Äù –∏–ª–∏ ‚Äú–ü–æ–ª—É—á–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç‚Äù.
					üõë–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø–∞—Å–ø–æ—Ä—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–ø–∏—Å–∞–≤ ‚Äú–ü–∞—Å–ø–æ—Ä—Ç‚Äù.`)
					if(message.user.pasport == true){
					return message.send(`–≤–∞—à –ø–∞—Å–ø–æ—Ä—Ç:
						üí¨–ò–º—è: ${message.user.nick}
						üë∂–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${message.user.dr}
						üë®‚Äç‚ù§‚Äçüë®–í –±—Ä–∞–∫–µ —Å: ${message.user.brakpasport}
						üåê–ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞: ${message.user.givet}
						üè¢–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: ${message.user.pasprabota}
						==========================================`);
				}
					});
				
				cmd.hear(/^(?:–∏–º—è –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ)\s(.*)$/i, async (message, bot) => {
					if(message.args[1].length >= 16) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ 15 —Å–∏–º–≤–æ–ª–æ–≤`);
				
					message.user.nick = message.args[1];
					return bot(`–¢–µ–ø–µ—Ä—å –≤–∞—à –Ω–∏–∫: "${message.user.nick}"`);
							});
				
				cmd.hear(/^(?:–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è)\s(.*)$/i, async (message, bot) => {
				
					message.user.dr = message.args[1];
					return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –¥–∞—Ç—É –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ: "${message.user.dr}"`);
							});
				
				cmd.hear(/^(?:–≤ –±—Ä–∞–∫–µ —Å)\s(.*)$/i, async (message, bot) => {
				
					message.user.brakpasport = message.args[1];
					return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±—Ä–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ —Å: "${message.user.brakpasport}"`);
							});
				
				cmd.hear(/^(?:–º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)\s(.*)$/i, async (message, bot) => {
				
					message.user.givet = message.args[1];
					return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ : "${message.user.givet}"`);
							});

							cmd.hear(/^(?:–°–º—Å)\s([0-9]+)\s([^]+)$/i, async (message, bot) => { 
								if(message.user.phone) return bot(`–£ –≤–∞—Å –Ω–µ—Ç—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –Ω–∞–±—Ä–æ–Ω–Ω–æ–º—É –∏–≥—Ä–æ–≤–æ–≥—É –∞–π–¥–∏. \n\n | –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ "—Ç–µ–ª–µ—Ñ–æ–Ω—ã".`)
								if(message.user.smstime > getUnix()) return bot(`–õ–∏–º–∏—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π: ${unixStampLeft(message.user.smstime - Date.now())}`);
							message.user.foolder += 1;
						
						const user = await users.find(x=> x.uid === Number(message.args[1])); 
						if(!user) return bot(`—Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–µ—Ä–æ—è—Ç–Ω–æ, –≤—ã –æ—à–∏–±–ª–∏—Å—å.`); 
						
						vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!` }); 
						
						vk.api.messages.send({ user_id: user.id, message: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è...` }); 
						
						vk.api.messages.send({ user_id: user.id, message: `
						<- &#4448;–ò–≥—Ä–æ–∫: ID: [id${message.user.id}| ${message.user.uid}] &#4448; üìû
						
						‚úâ –ö–∞—Ä—Ç–∞: [SIM1] 
						‚úâ –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${new Date().getHours()}:${new Date().getMinutes()}
						‚úâ –°–æ–æ–±—â–µ–Ω–∏–µ: ‚ùú${message.args[2]}‚ùú\n\n | –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤–µ–¥–∏—Ç–µ "–°–º—Å [id] [—Å–æ–æ–±—â–µ–Ω–∏–µ]` }); 
						
						message.user.smstime = getUnix() + 60000;
						message.user.balance -= 201;
							return message.send(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –° –≤–∞—Å —Å–ø–∏—Å–∞–Ω–æ - 201$`);
						});

						cmd.hear(/^(?:–ø–∏—Ç–æ–º—Ü—ã)\s?([0-9]+)?$/i, async (message, bot) => {
							if(!message.args[1]) return bot(`–ø–∏—Ç–æ–º—Ü—ã:
						üêå 1. –£–ª–∏—Ç–∫–∞ (1.000$)
						üê∞ 2. –ó–∞—è—Ü (500.000$)
						ü¶ä 3. –õ–∏—Å–∞ (1.250.000.000$)
						üê∂ 4. –°–æ–±–∞–∫–∞ (5.000.000.000$)
						üêº 5. –ü–æ–Ω–∏ (30.000.000.000$)
						üêÖ 6. –ü–∞–Ω—Ç–µ—Ä–∞ (50.000.000.000$)
						üòà 7. –î—Ä–∞–∫–æ–Ω (250.000.000.000$)
						
						üö©–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü–∏—Ç–æ–º—Ü—ã [–Ω–æ–º–µ—Ä]"`,
						{
							keyboard:JSON.stringify(
							{
							"inline": true,
							"buttons": [
							[{
							"action": {
							"type": "text",
							"payload": "{}",
							"label": "–ë–∏–∑–Ω–µ—Å—ã"
							},
							"color": "primary"
							},
							{
							"action": {
							"type": "text",
							"payload": "{}",
							"label": "–ü–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥"
							},
							"color": "negative"
							}]
							]
							})
							})
						
							const sell = pets.find(x=> x.id === Number(message.args[1]));
							if(!sell) return;
							if(message.user.misc.pet) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü. `);
						
							if(message.user.balance < sell.cost) return bot(`–≤–∞–º –Ω—É–∂–Ω–æ ${utils.sp(sell.cost)}$ –¥–ª—è –ø–æ–∫—É–ø–∫–∏. `);
							else if(message.user.balance >= sell.cost)
							{
								message.user.balance -= sell.cost;
								message.user.misc.pet = sell.id;
								message.user.pet.lvl += 1;
						
								return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Å–µ–±–µ –ø–∏—Ç–æ–º—Ü–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –µ–≥–æ –≤ –ø–æ—Ö–æ–¥ –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å. `);
							}
						});
						
						cmd.hear(/^(?:–ø–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥)$/i, async (message, bot) => {
							if(message.user.misc.pet < 1) return bot(`—É –í–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞. `);
							else {
								if(message.user.poxod > getUnix()) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –≤ –ø–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ 60 –º–∏–Ω—É—Ç. –í–∞—à –ø–∏—Ç–æ–º–µ—Ü –¥–æ–≤–æ–ª—å–Ω–æ —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª!: ${unixStampLeft(message.user.poxod - Date.now())}`);
												
								let cashfind = utils.random(332326,28721329);
								message.user.balance += cashfind;
								message.user.timers.poxod = true;
						
								message.user.poxod = getUnix() + 3600000;
						
								bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!`);
						}
						
						});
						
						cmd.hear(/^(?:–ø–∏—Ç–æ–º–µ—Ü)$/i, async (message, bot) => {
							message.user.msgbalance += 1;
							if(message.user.misc.pet < 1) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –ø–∏—Ç–æ–º—Ü–∞, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∏—Ç–æ–º—Ü–µ–≤ –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É '–ü–∏—Ç–æ–º—Ü—ã'`)
							return bot(`\nüêß –í–∞—à –ø–∏—Ç–æ–º–µ—Ü: ${pets[message.user.misc.pet - 1].name} \n\n | –•–æ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º –≤ –ø–æ—Ö–æ–¥, –∫–æ–º–∞–Ω–¥–∞ "–ü–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥".`);
						});

						cmd.hear(/^(?:–°—Ç—Ä–∞–Ω—ã)$/i, async (message, bot) => { 
							return bot(`–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω: 
							
							1.‚ùì–ù–µ —É–∫–∞–∑–∞–Ω–∞ 
							2.üá∫üá∏–°–®–ê 
							3.üá∑üá∫–†–æ—Å—Å–∏—è 
							4.üá∞üá∑–Ø–ø–æ–Ω–∏—è 
							5.üá∫üá¶–£–∫—Ä–∞–∏–Ω–∞ 
							6.üá∞üáø–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω 
							7.üáßüáæ–ë–µ–ª–æ—Ä—É—Å—Å–∏—è 
							8. üá™üá∏ –ò—Å–ø–∞–Ω–∏—è
							9. üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è
							
							–î–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ:–°—Ç—Ä–∞–Ω–∞ [–Ω–æ–º–µ—Ä]`); 
							});
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 9)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 9; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							});  
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 8)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 8; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							});  
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 7)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 7; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 6)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 6; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 5)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 5; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 4)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 4; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 3)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 3; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 1)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 1; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω.‚Äº`); 
							} 
							}); 
							
							cmd.hear(/^(?:–°—Ç—Ä–∞–Ω–∞ 2)$/i, async (message, bot) => { 
							let prize = utils.pick([1]); 
							
							if(prize === 1) 
							{ 
							message.user.transport.strana = 2; 
							return bot(`‚Äº–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.‚Äº–ù–∞–ø–æ–º–∏–Ω–∞–µ–º:–∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–∞—Ü–∏–π –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–∞–Ω‚Äº`); 
							} 
							});
							
cmd.hear(/^(?:–ö–µ–π—Å—ã)$/i, async (message, bot) => {
	return message.send(` –∫–µ–π—Å—ã:

	1‚É£ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å: 50.000.000.000$
	üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "–∫–µ–π—Å –∏–Ω—Ñ–æ 1"
	üõí –ö—É–ø–∏—Ç—å: "–∫–µ–π—Å 1 [–∫–æ–ª-–≤–æ]"
	
	2‚É£ –ü–ª–∞—Ç–∏–Ω—É–º –ö–µ–π—Å: 3.000.000.000.000$
	üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "–∫–µ–π—Å –∏–Ω—Ñ–æ 2"
	üõí –ö—É–ø–∏—Ç—å: "–∫–µ–π—Å 2 [–∫–æ–ª-–≤–æ]"
	
	üì¶ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å (${message.user.kbkays} —à—Ç.)
-üìú –û—Ç–∫—Ä—ã—Ç—å: ¬´–∫–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1¬ª

    üì¶ –ü–ª–∞—Ç–∏–Ω—É–º –ö–µ–π—Å (${message.user.kplati} —à—Ç.)
-üìú –û—Ç–∫—Ä—ã—Ç—å: ¬´–∫–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2¬ª
	`,
	{
		keyboard:JSON.stringify(
		{
		"inline": true,
		"buttons": [
		[{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å –∏–Ω—Ñ–æ 1"
		},
		"color": "primary"
		},
		{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å –∏–Ω—Ñ–æ 2"
		},
		"color": "negative"
		}]
		]
		})
		})
});

cmd.hear(/^(?:–ö–µ–π—Å –∏–Ω—Ñ–æ 1)$/i, async (message, bot) => {
	return message.send(`  –∏–∑ "–ë–æ–ª—å—à–æ–π –ö–µ–π—Å–∞" –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å:

	1‚É£ –û–ø—ã—Ç.
	2‚É£ –ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞.
	3‚É£ –†–µ–π—Ç–∏–Ω–≥.
	
	üõí –ö—É–ø–∏—Ç—å: "–∫–µ–π—Å 1" `);
});

cmd.hear(/^(?:–ö–µ–π—Å –∏–Ω—Ñ–æ 2)$/i, async (message, bot) => {
	return message.send(`–∏–∑ "–ü–ª–∞—Ç–∏–Ω—É–º –ö–µ–π—Å–∞" –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å:

	1‚É£ –û–ø—ã—Ç.
	2‚É£ –ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞.
	3‚É£ –†–µ–π—Ç–∏–Ω–≥.
	4‚É£  McDonalds
	5‚É£ –†–∞–Ω–¥–æ–º–Ω—ã–π –¥–æ–º
	6‚É£ –ü—Ä–∏–≤–∏–ª–µ–≥–∏—è "–°—É–ø–µ—Ä –∏–≥—Ä–æ–∫" –Ω–∞–≤—Å–µ–≥–¥–∞
	
	üõí –ö—É–ø–∏—Ç—å: "–∫–µ–π—Å 2" `);
});

	cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å–∫–µ–π—Å 1)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
				message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
				message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
				message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 
				
				if(message.user.settings.adm < 2) return bot(`–í—ã –Ω–µ –∞–¥–º–∏–Ω`);
				if(!Number(message.args[2])) return; 
				message.args[2] = Math.floor(Number(message.args[2])); 
				
				if(message.args[2] <= 0) return; 
				
				{ 
				let user = users.find(x=> x.uid === Number(message.args[1])); 
				if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 
				
				
				user.kbkays += message.args[2]; 
				
				
				await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
				if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
				–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä[@id${message.user.id}(${message.user.tag})] –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
				üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
				} 
				});

cmd.hear(/^(?:–ë–∫–µ–π—Å|–∫–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1)$/i, async (message, bot) => {
message.user.foolder += 1; 
	if(message.user.kbkays < 1) return message.send(`üíµ >> –£ –≤–∞—Å –Ω–µ—Ç—É –ë–æ–ª—å—à–æ–≥–æ –ö–µ–π—Å–∞, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ö–µ–π—Å 1"`);
    message.user.kbkays -= 1; 

	let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);

	setTimeout(() => {
		message.user.bkaystime = false;
	}, 86400000);

	message.user.bkaystime = true;


	if(prize === 1)
	{
		message.user.balance += 500000000;
		message.user.balance += 100000000;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 500.000.000$ \n –í—ã –ø–æ–ª—É—á–∏–ª–∏ +100.000.000$${smilesuccess}`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 2)
	{
		message.user.btc += 1000000;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1.000.000‚Çø ${smilesuccess}`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 3)
	{
		message.user.rating += 100;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 100üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 4)
	{
		message.user.rating += 53;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 53üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 5)
	{
		message.user.rating += 99;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 99üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 6)
	{
		message.user.rating += 33;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 33üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}
	if(prize === 7)
	{
		message.user.rating += 333;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 333üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}
	if(prize === 8)
	{
		message.user.rating += 777;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 777üëë`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}
	if(prize === 9)
	{
		message.user.bank += 100000000;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 100.000.000$ ${smilesuccess}`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}
	if(prize === 10)
	{
		message.user.bank += 500000000;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 500.000.000$ ${smilesuccess}`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 11)
	{
		message.user.bank += 10000000;
		return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 10.000.000$ ${smilesuccess}`,
		{
			keyboard:JSON.stringify(
			{
			"inline": true,
			"buttons": [
			[{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å—ã"
			},
			"color": "primary"
			},
			{
			"action": {
			"type": "text",
			"payload": "{}",
			"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
			},
			"color": "negative"
			}]
			]
			})
			})
	}

	if(prize === 12)
	{
		message.user.bank += 50000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}\n\n\n\
`,
{
	keyboard:JSON.stringify(
	{
	"inline": true,
	"buttons": [
	[{
	"action": {
	"type": "text",
	"payload": "{}",
	"label": "–ö–µ–π—Å—ã"
	},
	"color": "primary"
	},
	{
	"action": {
	"type": "text",
	"payload": "{}",
	"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
	},
	"color": "negative"
	}]
	]
	})
	})
	}
});

 cmd.hear(/^(?:–ö—É–ø–∏—Ç—å –±–æ–ª—å—à–æ–π –∫–µ–π—Å|–∫–µ–π—Å 1|–ë–æ–ª—å—à–æ–π –∫–µ–π—Å|–ö—É–ø–∏—Ç—å –∫–µ–π—Å 1)$/i, async (message, bot) => {
 	if(message.user.balance < 50000000000) return message.send(`‚ö† –ë–æ–ª—å—à–æ–π –∫–µ–π—Å —Å—Ç–æ–∏—Ç ${utils.sp(50000000000)}$`); 
    message.user.balance -= 50000000000; 
    message.user.kbkays += 1;
	return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ "–ë–æ–ª—å—à–æ–π –ö–µ–π—Å" (${message.user.kbkays} —à—Ç.)`,
	{
		keyboard:JSON.stringify(
		{
		"inline": true,
		"buttons": [
		[{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å—ã"
		},
		"color": "primary"
		},
		{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 1"
		},
		"color": "negative"
		}]
		]
		})
		})
});

cmd.hear(/^(?:–ö–µ–π—Å 2)$/i, async (message, bot) => {
	if(message.user.balance < 3000000000000) return message.send(`‚ö† –ë–æ–ª—å—à–æ–π –∫–µ–π—Å —Å—Ç–æ–∏—Ç ${utils.sp(3000000000000)}$`); 
   message.user.balance -= 3000000000000; 
   message.user.kplati += 1;
   return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ "–ü–ª–∞–Ω—Ç–∏—É–º –ö–µ–π—Å" (${message.user.kplati} —à—Ç.)`,
   {
	   keyboard:JSON.stringify(
	   {
	   "inline": true,
	   "buttons": [
	   [{
	   "action": {
	   "type": "text",
	   "payload": "{}",
	   "label": "–ö–µ–π—Å—ã"
	   },
	   "color": "primary"
	   },
	   {
	   "action": {
	   "type": "text",
	   "payload": "{}",
	   "label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
	   },
	   "color": "negative"
	   }]
	   ]
	   })
	   })
});

cmd.hear(/^(?:–∫–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2)$/i, async (message, bot) => {
	message.user.foolder += 1; 
		if(message.user.kplati < 1) return message.send(`üíµ >> –£ –≤–∞—Å –Ω–µ—Ç—É –ü–ª–∞–Ω—Ç–∏—É–º –∫–µ–π—Å–∞ –ö–µ–π—Å–∞, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ö–µ–π—Å 2"`);
		message.user.kplati -= 1; 
	
		let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
	
		if(prize === 1)
		{
			message.user.balance += 500000000;
			message.user.balance += 100000000;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 500.000.000$ \n –í—ã –ø–æ–ª—É—á–∏–ª–∏ +100.000.000$${smilesuccess}`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 2)
		{
			message.user.btc += 1000000;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1.000.000‚Çø ${smilesuccess}`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 3)
		{
			message.user.rating += 100;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 100üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 4)
		{
			message.user.rating += 53;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 53üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 5)
		{
			message.user.rating += 99;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 99üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 6)
		{
			message.user.rating += 33;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 33üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
		if(prize === 7)
		{
			message.user.rating += 333;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 333üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
		if(prize === 8)
		{
			message.user.rating += 777;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 777üëë`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
		if(prize === 9)
		{
			message.user.bank += 100000000;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 100.000.000$ ${smilesuccess}`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
		if(prize === 10)
		{
			message.user.bank += 500000000;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 500.000.000$ ${smilesuccess}`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 11)
		{
			message.user.bank += 10000000;
			return bot(`–û—Ç–∫—Ä—ã–≤ –ë–æ–ª—å—à–æ–π –ö–µ–π—Å, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç 10.000.000$ ${smilesuccess}`,
			{
				keyboard:JSON.stringify(
				{
				"inline": true,
				"buttons": [
				[{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å—ã"
				},
				"color": "primary"
				},
				{
				"action": {
				"type": "text",
				"payload": "{}",
				"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
				},
				"color": "negative"
				}]
				]
				})
				})
		}
	
		if(prize === 12)
		{
			message.user.bank += 50000000;
			return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}\n\n\n\
	`,
	{
		keyboard:JSON.stringify(
		{
		"inline": true,
		"buttons": [
		[{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å—ã"
		},
		"color": "primary"
		},
		{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç—å 2"
		},
		"color": "negative"
		}]
		]
		})
		})
		}
	});

	cmd.hear(/^(?:–æ–¥–µ–∂–¥–∞|–æ–¥–µ–∂–¥—ã)\s?([0-9]+)?$/i, async (message, bot) => {
		if(!message.args[1]) return bot(`–æ–¥–µ–∂–¥–∞:
		${message.user.odejda === 1 ? 'üëò' : 'üëò'} 1. –®–º–æ—Ç–∫–∏ —Å Avito (3$)
		${message.user.odejda === 2 ? 'üëò' : 'üëò'} 2. –®–º–æ—Ç–∫–∏ —Å AliExpress (1.000$)
		${message.user.odejda === 3 ? 'üëò' : 'üëò'} 3. Demix (10.000$)
		${message.user.odejda === 4 ? 'üëò' : 'üëò'} 4. Puma (300.000$)
		${message.user.odejda === 5 ? 'üëò' : 'üëò'} 5. Reebok (300.000$)
		${message.user.odejda === 6 ? 'üëò' : 'üëò'} 6. Nike (500.000$)
		${message.user.odejda === 7 ? 'üëò' : 'üëò'} 7. Adidas (1.000.000$)
		${message.user.odejda === 8 ? 'üëò' : 'üëò'} 8. Armani (100.000.000$)
		${message.user.odejda === 9 ? 'üëò' : 'üëò'} 9. –ú–∞—Å–∫–∞ –õ–µ—Å–∏ (250.000.000$)
		${message.user.odejda === 10 ? 'üëò' : 'üëò'} 10. Versace (500.000.000$)
		${message.user.odejda === 11 ? 'üëò' : 'üëò'} 11. Burberry (1.000.000.000$)
		${message.user.odejda === 12 ? 'üëò' : 'üëò'} 12. Ralph Lauren (10.000.000.000$)
		${message.user.odejda === 13 ? 'üëò' : 'üëò'} 13. Coco Chanel (15.000.000.000$)
		${message.user.odejda === 14 ? 'üëò' : 'üëò'} 14. Prada (30.000.000.000$)
		${message.user.odejda === 15 ? 'üëò' : 'üëò'} 15. Hermes (100.000.000.000$)
		${message.user.odejda === 16 ? 'üëò' : 'üëò'} 16. Gucci (5.000.000.000.000$)
		${message.user.odejda === 17 ? 'üëò' : 'üëò'} 17. –ú–∞—Å–∫–∞ –õ—å–≤–∞ (100.000.000.000.000$)
		
		üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–û–¥–µ–∂–¥–∞ [–Ω–æ–º–µ—Ä]"`, { attachment: "photo-1162895311_457239813"});
		
		const sell = odejda.find(x=> x.id === Number(message.args[1]));
		if(!sell) return;
		if(message.user.odejda) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–¥–µ–∂–¥–∞ (${odejda[message.user.odejda - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –æ–¥–µ–∂–¥—É"`,
		{
		keyboard:JSON.stringify(
		{
		"inline": true,
		"buttons": [
		[{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "–ü—Ä–æ–¥–∞—Ç—å –æ–¥–µ–∂–¥—É"
		},
		"color": "primary"
		}]
		]
		})
		})
		
		if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`,
		{
		keyboard:JSON.stringify(
		{
		"inline": true,
		"buttons": [
		[{
		"action": {
		"type": "text",
		"payload": "{}",
		"label": "ü§ë –ë–æ–Ω—É—Å"
		},
		"color": "primary"
		}]
		]
		})
		})
		else if(message.user.balance >= sell.cost)
		{
		message.user.balance -= sell.cost;
		message.user.odejda = sell.id;
		
		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
		}
		});

		cmd.hear(/^(?:warn)\s?([0-9]+)?\s([^]+)?/i, async (message, args, bot) => { 
			let user = users.find(x=> x.uid === Number(message.args[1])); 
			if(!message.args[1] || !message.args[2]) return message.send(`üî∏ ¬ª –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: warn [ID] [–ü–†–ò–ß–ò–ù–ê]`); 
			if(!Number(message.args[1])) return message.send(`üî∏ ¬ª –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`); 
			if(message.user.settings.adm < 2) return message.send(`üî∏ ¬ª –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`); 
			if(!users[message.args[1]]) return message.send(`‚ùé ¬ª –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`); 
			
			users[message.args[1]].warn += 1; 
			users[message.args[1]].warn_p = `${message.args[2]}` 
			
			let text = `‚úÖ ¬ª ${user.tag} –í–∞–º –≤—ã–¥–∞–ª–∏ –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: [${message.args[2]}]\n\n < –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç "–†–µ–ø–æ—Ä—Ç –ê–¥–º–∏–Ω [id${message.user.id}| ${message.user.tag}] –≤—ã–¥–∞–ª –º–Ω–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã" - –∏–ª–∏ –≤–∞—à —Ç–µ–∫—Å—Ç.` 
			if(users[message.args[1]].warn == 5){ 
			users[message.args[1]].warn = 0; 
			user.ban = true; 
			text += `\nüî∏ ¬ª –£ –≤–∞—Å 5 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.\nüî∏ ¬ª –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.` 
			} 
			vk.api.call('messages.send', { 
			peer_id: users[message.args[1]].id, 
			message: text 
			}); 
			return message.send(`‚úÖ ¬ª –í—ã –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É [${users[message.args[1]].tag}].`); 
			});
			
			cmd.hear(/^(?:Unwarn)\s?([0-9]+)?/i, async (message, args, bot) => { 
			let user = users.find(x=> x.uid === Number(message.args[1])); 
			if(!message.args[1]) return message.send(`üî∏ ¬ª –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unwarn [ID]`); 
			if(!Number(message.args[1])) return message.send(`üî∏ ¬ª –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`); 
			if(message.user.settings.adm < 2) return message.send(`üî∏ ¬ª –í—ã –Ω–µ –°–û–∑–¥–∞—Ç–µ–ª—å`); 
			if(!users[message.args[1]]) return message.send(`‚ùé ¬ª –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`); 
			
			users[message.args[1]].warn = 0; 
			users[message.args[1]].warn_p = `–ù–µ—Ç—É`; 
			
			vk.api.call('messages.send', { 
			peer_id: users[message.args[1]].id, 
			message: `‚úÖ ¬ª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–Ω—è–ª –í–∞–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`
			}); 
			return message.send(`‚úÖ ¬ª –í—ã —Å–Ω—è–ª–∏ –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É [${users[message.args[1]].tag}].`); 
			});

			cmd.hear(/^(?:–ê–∑–∞—Ä—Ç)\s?(.*)?$/i, async (message, bot) => {
				message.user.nalogy += (100, 123, 1021, 200, 21, 500, 222, 789);
				message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
				message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
				message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
				message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë|dct|dc`)/ig, message.user.rating);
				let smilelose = ['üò©','üòï','üò¶','üòµ','üòü','üòî','üò©','üòø'].random(); 
				let smilewin = ['üòÑ','üòÅ','üòä','üòÉ','üòâ','üòú','üòã','ü§ó','üôÇ','üôÉ','üòå','ü§§','üòá','ü§™','üòà','üò∏','üòº','üò∫','üòé'].random();
			
				if(!Number(message.args[1])) return;
				message.args[1] = Math.floor(Number(message.args[1]));
			
				if(message.args[1] <= 0) return bot(`–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–Ω—É—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –±–æ—Ç–µ`);
			
				if(message.args[1] > message.user.rating) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
			else if(message.args[1] <= message.user.rating && message.user.rating <= 50000000000) 
			{ 
			message.user.rating -= message.args[1]; 
			const multiply = utils.pick([0, 1, 0.75, 2, 1, 0, 5, 2, 2, 2, 3, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 0.25, 0.25, 4, 0.25, 0.25, 5, 0.25, 4, 0.25, 0.25, 0.5, 40, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 50, 0.75, 0.75, 0.75, 0.75, 3, 0.75, 0.75, 0.75, 5, 0.75]); 
			
			message.user.rating += Math.floor(message.args[1] * multiply); 
			return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})üëë ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})üëë ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüëë ‚Äî –†–µ–π—Ç–∏–Ω–≥: (${utils.sp(message.user.rating)})`); 
			} 
			
			else if(message.args[1] <= message.user.rating && message.user.rating > 50000000000 && message.user.rating <= 300000000000) 
			{ 
			message.user.rating -= message.args[1]; 
			const multiply = utils.pick([0, 10, 1, 5, 5, 1, 3, 10, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 1, 20, 0.25, 0.25, 0.25, 0.25, 0.25, 8, 0.5, 5, 0.5, 0.5, 0.5, 0.5, 13, 0.5, 0.75, 0.75, 0.75, 8, 0.75, 0.75, 0.75, 0.75, 19, 0.75]); 
			
			message.user.rating += Math.floor(message.args[1] * multiply);
			
			return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})üëë ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})üëë ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüëë ‚Äî –†–µ–π—Ç–∏–Ω–≥: (${utils.sp(message.user.rating)})`); 
			} 
			
			else if(message.args[1] <= message.user.rating && message.user.rating > 300000000000 && message.user.rating <= 1000000000000) 
			{ 
			message.user.rating -= message.args[1]; 
			const multiply = utils.pick([0, 5, 1, 3, 3, 3, 1, 10, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.rating += Math.floor(message.args[1] * multiply); 
			
			return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})üëë ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})üëë ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüëë ‚Äî –†–µ–π—Ç–∏–Ω–≥: (${utils.sp(message.user.rating)})`); 
			} 
			
			else if(message.args[1] <= message.user.rating && message.user.rating > 1000000000000 && message.user.rating <= 10000000000000) 
			{ 
			message.user.rating -= message.args[1]; 
			const multiply = utils.pick([0, 1, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.rating += Math.floor(message.args[1] * multiply); 
			
			return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})üëë ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})üëë ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüëë ‚Äî –†–µ–π—Ç–∏–Ω–≥: (${utils.sp(message.user.rating)})`); 
			} 
			else if(message.args[1] <= message.user.rating && message.user.rating > 10000000000000)
			{ 
			message.user.rating -= message.args[1]; 
			const multiply = utils.pick([0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.rating += Math.floor(message.args[1] * multiply); 
			
			return bot(`${multiply === 1 ? `\n‚ùé ‚Äî –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.` : `${multiply < 1 ? `üìâ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] - message.args[1] * multiply)})üëë ${smilelose}\n` : `üìà‚Äî –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ (${utils.sp(message.args[1] * multiply - message.args[1])})üëë ${smilewin}\n`}`} ‚ûï ‚Äî –£–º–Ω–æ–∂–µ–Ω–∏–µ (x${multiply}) \nüëë ‚Äî –†–µ–π—Ç–∏–Ω–≥: (${utils.sp(message.user.rating)})`); 
				}
			});

			cmd.hear(/^(?:–ø—Ä–æ–º–æ –≤–∫–ª)$/i, async (message, bot) => { 
				if(message.user.settings.adm < 3) return; 
				
				clearPromo();
				return bot(`–ø—Ä–æ–º–æ–∫–æ–¥ –≤–∫–ª—é—á–µ–Ω! ${smilesuccess}`);
				
				});
				
				cmd.hear(/^(?:–ø—Ä–æ–º–æ —Ç–∏–ø btc)$/i, async (message, bot) => { 
				if(message.user.settings.adm < 3) return;
				config.promotip = "btc"; 
				saveConfig();
				return bot(`—Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞: Bitcoin. ${smilesuccess}`);
				
				});
				
				cmd.hear(/^(?:–ø—Ä–æ–º–æ —Ç–∏–ø –±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => { 
				if(message.user.settings.adm < 3) return;
				config.promotip = "balance"; 
				saveConfig();
				return bot(`—Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞: –ë–∞–ª–∞–Ω—Å. ${smilesuccess}`);
				
				});

				cmd.hear(/^(?:–ø—Ä–æ–º–æ)\s([0-9]+)$/i, async (message, bot) => { 
					if(message.user.settings.adm < 3) return;
					config.promovalue = Number(message.args[1]); 
					saveConfig();
					return bot(`—Å—É–º–º–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞: ${config.promovalue}. ${smilesuccess}`);
					
					});
					
					cmd.hear(/^(?:–ø—Ä–æ–º–æ –ª–∏–º–∏—Ç)\s([0-9]+)$/i, async (message, bot) => { 
					if(message.user.settings.adm < 3) return;
					config.promolimit = Number(message.args[1]); 
					saveConfig();
					return bot(`–ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞: ${config.promolimit}. ${smilesuccess}`);
					
					});
					
					cmd.hear(/^(?:–ø—Ä–æ–º–æ –±–∞–±–∫–∏|–ø—Ä–æ–º–æ)$/i, async (message, bot) => {
					if(message.isChat) return bot(`—á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ—Ç—É –≤ –ª–∏—á–∫—É.`);
					if(message.user.promo) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥. ${smileerror}`);
					else 
					{
					
						if(promo >= config.promolimit) return bot(`—É —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ó–ê–ö–û–ù–ß–ò–õ–ò–°–¨ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø, –≤–∫–ª—é—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ –æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å—è—Ö —á—Ç–æ –±—ã —É–∑–Ω–∞–≤–∞—Ç—å –û–î–ù–ò–ú –ò–ó –ü–ï–†–í–´–• –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö. üì¢`);
						if(config.promotip === "btc") message.user.btc += config.promovalue;
						if(config.promotip === "balance") message.user.balance += config.promovalue;
						message.user.promo = true;
						promo += 1;
						ostalos = config.promolimit-promo;
						return bot(`–∑–∞—á–∏—Å–ª–µ–Ω–æ +${utils.sp(config.promovalue)}${config.promotip.toString().replace(/btc/gi, "‡∏ø").replace(/balance/gi, "$")} ‚úÖ
					üì¢ –û—Å—Ç–∞–ª–æ—Å—å ${ostalos} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π.`);
					
					}
					
					});